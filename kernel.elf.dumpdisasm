
kernel.elf:     file format elf32-i386


Disassembly of section .text:

00100000 <main>:
  100000:	55                   	push   ebp
  100001:	89 e5                	mov    ebp,esp
  100003:	83 e4 f0             	and    esp,0xfffffff0
  100006:	83 ec 10             	sub    esp,0x10
  100009:	c7 04 24 40 14 10 00 	mov    DWORD PTR [esp],0x101440
  100010:	e8 ac 00 00 00       	call   1000c1 <put_str>
  100015:	f4                   	hlt    
  100016:	eb fd                	jmp    100015 <main+0x15>
  100018:	90                   	nop
  100019:	90                   	nop
  10001a:	90                   	nop
  10001b:	90                   	nop
  10001c:	90                   	nop
  10001d:	90                   	nop
  10001e:	90                   	nop
  10001f:	90                   	nop

00100020 <start>:
  100020:	31 c0                	xor    eax,eax
  100022:	66 b8 10 00          	mov    ax,0x10
  100026:	8e d8                	mov    ds,eax
  100028:	8e c0                	mov    es,eax
  10002a:	8e d0                	mov    ss,eax
  10002c:	8e e0                	mov    fs,eax
  10002e:	8e e8                	mov    gs,eax
  100030:	bc 00 7c 00 00       	mov    esp,0x7c00
  100035:	e8 c6 ff ff ff       	call   100000 <main>

0010003a <spin>:
  10003a:	f4                   	hlt    
  10003b:	e9 fa ff ff ff       	jmp    10003a <spin>

00100040 <put_int>:
  100040:	60                   	pusha  
  100041:	89 e5                	mov    ebp,esp
  100043:	8b 45 24             	mov    eax,DWORD PTR [ebp+0x24]
  100046:	89 c2                	mov    edx,eax
  100048:	bf 07 00 00 00       	mov    edi,0x7
  10004d:	b9 08 00 00 00       	mov    ecx,0x8
  100052:	bb 50 24 10 00       	mov    ebx,0x102450

00100057 <put_int.16based_4bits>:
  100057:	81 e2 0f 00 00 00    	and    edx,0xf
  10005d:	81 fa 09 00 00 00    	cmp    edx,0x9
  100063:	7f 0b                	jg     100070 <put_int.is_A2F>
  100065:	81 c2 30 00 00 00    	add    edx,0x30
  10006b:	e9 0c 00 00 00       	jmp    10007c <put_int.store>

00100070 <put_int.is_A2F>:
  100070:	81 ea 0a 00 00 00    	sub    edx,0xa
  100076:	81 c2 41 00 00 00    	add    edx,0x41

0010007c <put_int.store>:
  10007c:	88 14 3b             	mov    BYTE PTR [ebx+edi*1],dl
  10007f:	4f                   	dec    edi
  100080:	c1 e8 04             	shr    eax,0x4
  100083:	89 c2                	mov    edx,eax
  100085:	e2 d0                	loop   100057 <put_int.16based_4bits>

00100087 <put_int.ready_to_print>:
  100087:	47                   	inc    edi

00100088 <put_int.skip_prefix_0>:
  100088:	81 ff 08 00 00 00    	cmp    edi,0x8
  10008e:	74 12                	je     1000a2 <put_int.full0>

00100090 <put_int.go_on_skip>:
  100090:	8a 8f 50 24 10 00    	mov    cl,BYTE PTR [edi+0x102450]
  100096:	47                   	inc    edi
  100097:	80 f9 30             	cmp    cl,0x30
  10009a:	74 ec                	je     100088 <put_int.skip_prefix_0>
  10009c:	4f                   	dec    edi
  10009d:	e9 02 00 00 00       	jmp    1000a4 <put_int.put_each_num>

001000a2 <put_int.full0>:
  1000a2:	b1 30                	mov    cl,0x30

001000a4 <put_int.put_each_num>:
  1000a4:	51                   	push   ecx
  1000a5:	e8 37 00 00 00       	call   1000e1 <put_char>
  1000aa:	81 c4 04 00 00 00    	add    esp,0x4
  1000b0:	47                   	inc    edi
  1000b1:	8a 8f 50 24 10 00    	mov    cl,BYTE PTR [edi+0x102450]
  1000b7:	81 ff 08 00 00 00    	cmp    edi,0x8
  1000bd:	7c e5                	jl     1000a4 <put_int.put_each_num>
  1000bf:	61                   	popa   
  1000c0:	c3                   	ret    

001000c1 <put_str>:
  1000c1:	53                   	push   ebx
  1000c2:	51                   	push   ecx
  1000c3:	31 c9                	xor    ecx,ecx
  1000c5:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]

001000c9 <put_str.goon>:
  1000c9:	8a 0b                	mov    cl,BYTE PTR [ebx]
  1000cb:	80 f9 00             	cmp    cl,0x0
  1000ce:	74 0e                	je     1000de <put_str.str_over>
  1000d0:	89 0c 24             	mov    DWORD PTR [esp],ecx
  1000d3:	e8 09 00 00 00       	call   1000e1 <put_char>
  1000d8:	43                   	inc    ebx
  1000d9:	e9 eb ff ff ff       	jmp    1000c9 <put_str.goon>

001000de <put_str.str_over>:
  1000de:	59                   	pop    ecx
  1000df:	5b                   	pop    ebx
  1000e0:	c3                   	ret    

001000e1 <put_char>:
  1000e1:	60                   	pusha  
  1000e2:	66 b8 18 00          	mov    ax,0x18
  1000e6:	8e e8                	mov    gs,eax
  1000e8:	66 ba d4 03          	mov    dx,0x3d4
  1000ec:	b0 0e                	mov    al,0xe
  1000ee:	ee                   	out    dx,al
  1000ef:	66 ba d5 03          	mov    dx,0x3d5
  1000f3:	ec                   	in     al,dx
  1000f4:	88 c4                	mov    ah,al
  1000f6:	66 ba d4 03          	mov    dx,0x3d4
  1000fa:	b0 0f                	mov    al,0xf
  1000fc:	ee                   	out    dx,al
  1000fd:	66 ba d5 03          	mov    dx,0x3d5
  100101:	ec                   	in     al,dx
  100102:	66 89 c3             	mov    bx,ax
  100105:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
  100109:	80 f9 0d             	cmp    cl,0xd
  10010c:	74 42                	je     100150 <put_char.is_carriage_return>
  10010e:	80 f9 0a             	cmp    cl,0xa
  100111:	74 3d                	je     100150 <put_char.is_carriage_return>
  100113:	80 f9 08             	cmp    cl,0x8
  100116:	74 05                	je     10011d <put_char.is_backspace>
  100118:	e9 19 00 00 00       	jmp    100136 <put_char.put_other>

0010011d <put_char.is_backspace>:
  10011d:	66 4b                	dec    bx
  10011f:	66 d1 e3             	shl    bx,1
  100122:	65 67 c6 07 20       	mov    BYTE PTR gs:[bx],0x20
  100127:	66 43                	inc    bx
  100129:	65 67 c6 07 07       	mov    BYTE PTR gs:[bx],0x7
  10012e:	66 d1 eb             	shr    bx,1
  100131:	e9 64 00 00 00       	jmp    10019a <put_char.set_cursor>

00100136 <put_char.put_other>:
  100136:	66 d1 e3             	shl    bx,1
  100139:	65 67 88 0f          	mov    BYTE PTR gs:[bx],cl
  10013d:	66 43                	inc    bx
  10013f:	65 67 c6 07 07       	mov    BYTE PTR gs:[bx],0x7
  100144:	66 d1 eb             	shr    bx,1
  100147:	66 43                	inc    bx
  100149:	66 81 fb d0 07       	cmp    bx,0x7d0
  10014e:	7c 4a                	jl     10019a <put_char.set_cursor>

00100150 <put_char.is_carriage_return>:
  100150:	66 31 d2             	xor    dx,dx
  100153:	66 89 d8             	mov    ax,bx
  100156:	66 be 50 00          	mov    si,0x50
  10015a:	66 f7 f6             	div    si
  10015d:	66 29 d3             	sub    bx,dx

00100160 <put_char.is_carriage_return_end>:
  100160:	66 81 c3 50 00       	add    bx,0x50
  100165:	66 81 fb d0 07       	cmp    bx,0x7d0

0010016a <put_char.is_line_feed_end>:
  10016a:	7c 2e                	jl     10019a <put_char.set_cursor>

0010016c <put_char.roll_screen>:
  10016c:	fc                   	cld    
  10016d:	b9 c0 03 00 00       	mov    ecx,0x3c0
  100172:	be a0 80 0b 00       	mov    esi,0xb80a0
  100177:	bf 00 80 0b 00       	mov    edi,0xb8000
  10017c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  10017e:	bb 00 0f 00 00       	mov    ebx,0xf00
  100183:	b9 50 00 00 00       	mov    ecx,0x50

00100188 <put_char.cls>:
  100188:	65 66 c7 03 20 07    	mov    WORD PTR gs:[ebx],0x720
  10018e:	81 c3 02 00 00 00    	add    ebx,0x2
  100194:	e2 f2                	loop   100188 <put_char.cls>
  100196:	66 bb 80 07          	mov    bx,0x780

0010019a <put_char.set_cursor>:
  10019a:	66 ba d4 03          	mov    dx,0x3d4
  10019e:	b0 0e                	mov    al,0xe
  1001a0:	ee                   	out    dx,al
  1001a1:	66 ba d5 03          	mov    dx,0x3d5
  1001a5:	88 f8                	mov    al,bh
  1001a7:	ee                   	out    dx,al
  1001a8:	66 ba d4 03          	mov    dx,0x3d4
  1001ac:	b0 0f                	mov    al,0xf
  1001ae:	ee                   	out    dx,al
  1001af:	66 ba d5 03          	mov    dx,0x3d5
  1001b3:	88 d8                	mov    al,bl
  1001b5:	ee                   	out    dx,al

001001b6 <put_char.put_char_done>:
  1001b6:	61                   	popa   
  1001b7:	c3                   	ret    

001001b8 <outb>:
  1001b8:	55                   	push   ebp
  1001b9:	89 e5                	mov    ebp,esp
  1001bb:	83 ec 08             	sub    esp,0x8
  1001be:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  1001c1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1001c4:	66 89 55 fc          	mov    WORD PTR [ebp-0x4],dx
  1001c8:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al
  1001cb:	0f b6 45 f8          	movzx  eax,BYTE PTR [ebp-0x8]
  1001cf:	0f b7 55 fc          	movzx  edx,WORD PTR [ebp-0x4]
  1001d3:	ee                   	out    dx,al
  1001d4:	c9                   	leave  
  1001d5:	c3                   	ret    

001001d6 <pic_init>:
  1001d6:	55                   	push   ebp
  1001d7:	89 e5                	mov    ebp,esp
  1001d9:	83 ec 18             	sub    esp,0x18
  1001dc:	c7 44 24 04 11 00 00 	mov    DWORD PTR [esp+0x4],0x11
  1001e3:	00 
  1001e4:	c7 04 24 20 00 00 00 	mov    DWORD PTR [esp],0x20
  1001eb:	e8 c8 ff ff ff       	call   1001b8 <outb>
  1001f0:	c7 44 24 04 20 00 00 	mov    DWORD PTR [esp+0x4],0x20
  1001f7:	00 
  1001f8:	c7 04 24 21 00 00 00 	mov    DWORD PTR [esp],0x21
  1001ff:	e8 b4 ff ff ff       	call   1001b8 <outb>
  100204:	c7 44 24 04 04 00 00 	mov    DWORD PTR [esp+0x4],0x4
  10020b:	00 
  10020c:	c7 04 24 21 00 00 00 	mov    DWORD PTR [esp],0x21
  100213:	e8 a0 ff ff ff       	call   1001b8 <outb>
  100218:	c7 44 24 04 01 00 00 	mov    DWORD PTR [esp+0x4],0x1
  10021f:	00 
  100220:	c7 04 24 21 00 00 00 	mov    DWORD PTR [esp],0x21
  100227:	e8 8c ff ff ff       	call   1001b8 <outb>
  10022c:	c7 44 24 04 11 00 00 	mov    DWORD PTR [esp+0x4],0x11
  100233:	00 
  100234:	c7 04 24 a0 00 00 00 	mov    DWORD PTR [esp],0xa0
  10023b:	e8 78 ff ff ff       	call   1001b8 <outb>
  100240:	c7 44 24 04 28 00 00 	mov    DWORD PTR [esp+0x4],0x28
  100247:	00 
  100248:	c7 04 24 a1 00 00 00 	mov    DWORD PTR [esp],0xa1
  10024f:	e8 64 ff ff ff       	call   1001b8 <outb>
  100254:	c7 44 24 04 02 00 00 	mov    DWORD PTR [esp+0x4],0x2
  10025b:	00 
  10025c:	c7 04 24 a1 00 00 00 	mov    DWORD PTR [esp],0xa1
  100263:	e8 50 ff ff ff       	call   1001b8 <outb>
  100268:	c7 44 24 04 01 00 00 	mov    DWORD PTR [esp+0x4],0x1
  10026f:	00 
  100270:	c7 04 24 a1 00 00 00 	mov    DWORD PTR [esp],0xa1
  100277:	e8 3c ff ff ff       	call   1001b8 <outb>
  10027c:	c7 44 24 04 fe 00 00 	mov    DWORD PTR [esp+0x4],0xfe
  100283:	00 
  100284:	c7 04 24 21 00 00 00 	mov    DWORD PTR [esp],0x21
  10028b:	e8 28 ff ff ff       	call   1001b8 <outb>
  100290:	c7 44 24 04 ff 00 00 	mov    DWORD PTR [esp+0x4],0xff
  100297:	00 
  100298:	c7 04 24 a1 00 00 00 	mov    DWORD PTR [esp],0xa1
  10029f:	e8 14 ff ff ff       	call   1001b8 <outb>
  1002a4:	c7 04 24 50 14 10 00 	mov    DWORD PTR [esp],0x101450
  1002ab:	e8 11 fe ff ff       	call   1000c1 <put_str>
  1002b0:	c9                   	leave  
  1002b1:	c3                   	ret    

001002b2 <make_idt_desc>:
  1002b2:	55                   	push   ebp
  1002b3:	89 e5                	mov    ebp,esp
  1002b5:	83 ec 04             	sub    esp,0x4
  1002b8:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1002bb:	88 45 fc             	mov    BYTE PTR [ebp-0x4],al
  1002be:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  1002c1:	89 c2                	mov    edx,eax
  1002c3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1002c6:	66 89 10             	mov    WORD PTR [eax],dx
  1002c9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1002cc:	66 c7 40 02 08 00    	mov    WORD PTR [eax+0x2],0x8
  1002d2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1002d5:	c6 40 04 00          	mov    BYTE PTR [eax+0x4],0x0
  1002d9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1002dc:	0f b6 55 fc          	movzx  edx,BYTE PTR [ebp-0x4]
  1002e0:	88 50 05             	mov    BYTE PTR [eax+0x5],dl
  1002e3:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  1002e6:	c1 e8 10             	shr    eax,0x10
  1002e9:	89 c2                	mov    edx,eax
  1002eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1002ee:	66 89 50 06          	mov    WORD PTR [eax+0x6],dx
  1002f2:	c9                   	leave  
  1002f3:	c3                   	ret    

001002f4 <idt_desc_init>:
  1002f4:	55                   	push   ebp
  1002f5:	89 e5                	mov    ebp,esp
  1002f7:	83 ec 28             	sub    esp,0x28
  1002fa:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
  100301:	eb 2e                	jmp    100331 <idt_desc_init+0x3d>
  100303:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100306:	8b 04 85 58 24 10 00 	mov    eax,DWORD PTR [eax*4+0x102458]
  10030d:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
  100310:	c1 e2 03             	shl    edx,0x3
  100313:	81 c2 e0 24 10 00    	add    edx,0x1024e0
  100319:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
  10031d:	c7 44 24 04 8e 00 00 	mov    DWORD PTR [esp+0x4],0x8e
  100324:	00 
  100325:	89 14 24             	mov    DWORD PTR [esp],edx
  100328:	e8 85 ff ff ff       	call   1002b2 <make_idt_desc>
  10032d:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100331:	83 7d f4 20          	cmp    DWORD PTR [ebp-0xc],0x20
  100335:	7e cc                	jle    100303 <idt_desc_init+0xf>
  100337:	c7 04 24 62 14 10 00 	mov    DWORD PTR [esp],0x101462
  10033e:	e8 7e fd ff ff       	call   1000c1 <put_str>
  100343:	c9                   	leave  
  100344:	c3                   	ret    

00100345 <general_intr_handler>:
  100345:	55                   	push   ebp
  100346:	89 e5                	mov    ebp,esp
  100348:	83 ec 28             	sub    esp,0x28
  10034b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10034e:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
  100351:	80 7d f4 27          	cmp    BYTE PTR [ebp-0xc],0x27
  100355:	74 2c                	je     100383 <general_intr_handler+0x3e>
  100357:	80 7d f4 2f          	cmp    BYTE PTR [ebp-0xc],0x2f
  10035b:	74 26                	je     100383 <general_intr_handler+0x3e>
  10035d:	c7 04 24 79 14 10 00 	mov    DWORD PTR [esp],0x101479
  100364:	e8 58 fd ff ff       	call   1000c1 <put_str>
  100369:	0f b6 45 f4          	movzx  eax,BYTE PTR [ebp-0xc]
  10036d:	89 04 24             	mov    DWORD PTR [esp],eax
  100370:	e8 cb fc ff ff       	call   100040 <put_int>
  100375:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [esp],0xa
  10037c:	e8 60 fd ff ff       	call   1000e1 <put_char>
  100381:	eb 01                	jmp    100384 <general_intr_handler+0x3f>
  100383:	90                   	nop
  100384:	c9                   	leave  
  100385:	c3                   	ret    

00100386 <exception_init>:
  100386:	55                   	push   ebp
  100387:	89 e5                	mov    ebp,esp
  100389:	83 ec 10             	sub    esp,0x10
  10038c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
  100393:	eb 20                	jmp    1003b5 <exception_init+0x2f>
  100395:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
  100398:	c7 04 85 a0 26 10 00 	mov    DWORD PTR [eax*4+0x1026a0],0x100345
  10039f:	45 03 10 00 
  1003a3:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
  1003a6:	c7 04 85 00 26 10 00 	mov    DWORD PTR [eax*4+0x102600],0x101488
  1003ad:	88 14 10 00 
  1003b1:	83 45 fc 01          	add    DWORD PTR [ebp-0x4],0x1
  1003b5:	83 7d fc 20          	cmp    DWORD PTR [ebp-0x4],0x20
  1003b9:	7e da                	jle    100395 <exception_init+0xf>
  1003bb:	c7 05 00 26 10 00 90 	mov    DWORD PTR ds:0x102600,0x101490
  1003c2:	14 10 00 
  1003c5:	c7 05 04 26 10 00 a1 	mov    DWORD PTR ds:0x102604,0x1014a1
  1003cc:	14 10 00 
  1003cf:	c7 05 08 26 10 00 b5 	mov    DWORD PTR ds:0x102608,0x1014b5
  1003d6:	14 10 00 
  1003d9:	c7 05 0c 26 10 00 c3 	mov    DWORD PTR ds:0x10260c,0x1014c3
  1003e0:	14 10 00 
  1003e3:	c7 05 10 26 10 00 dc 	mov    DWORD PTR ds:0x102610,0x1014dc
  1003ea:	14 10 00 
  1003ed:	c7 05 14 26 10 00 f4 	mov    DWORD PTR ds:0x102614,0x1014f4
  1003f4:	14 10 00 
  1003f7:	c7 05 18 26 10 00 17 	mov    DWORD PTR ds:0x102618,0x101517
  1003fe:	15 10 00 
  100401:	c7 05 1c 26 10 00 34 	mov    DWORD PTR ds:0x10261c,0x101534
  100408:	15 10 00 
  10040b:	c7 05 20 26 10 00 57 	mov    DWORD PTR ds:0x102620,0x101557
  100412:	15 10 00 
  100415:	c7 05 24 26 10 00 72 	mov    DWORD PTR ds:0x102624,0x101572
  10041c:	15 10 00 
  10041f:	c7 05 28 26 10 00 8e 	mov    DWORD PTR ds:0x102628,0x10158e
  100426:	15 10 00 
  100429:	c7 05 2c 26 10 00 a8 	mov    DWORD PTR ds:0x10262c,0x1015a8
  100430:	15 10 00 
  100433:	c7 05 30 26 10 00 c0 	mov    DWORD PTR ds:0x102630,0x1015c0
  10043a:	15 10 00 
  10043d:	c7 05 34 26 10 00 dc 	mov    DWORD PTR ds:0x102634,0x1015dc
  100444:	15 10 00 
  100447:	c7 05 38 26 10 00 fd 	mov    DWORD PTR ds:0x102638,0x1015fd
  10044e:	15 10 00 
  100451:	c7 05 40 26 10 00 18 	mov    DWORD PTR ds:0x102640,0x101618
  100458:	16 10 00 
  10045b:	c7 05 44 26 10 00 39 	mov    DWORD PTR ds:0x102644,0x101639
  100462:	16 10 00 
  100465:	c7 05 48 26 10 00 57 	mov    DWORD PTR ds:0x102648,0x101657
  10046c:	16 10 00 
  10046f:	c7 05 4c 26 10 00 74 	mov    DWORD PTR ds:0x10264c,0x101674
  100476:	16 10 00 
  100479:	c9                   	leave  
  10047a:	c3                   	ret    

0010047b <intr_enable>:
  10047b:	55                   	push   ebp
  10047c:	89 e5                	mov    ebp,esp
  10047e:	83 ec 18             	sub    esp,0x18
  100481:	e8 65 00 00 00       	call   1004eb <intr_get_status>
  100486:	83 f8 01             	cmp    eax,0x1
  100489:	75 0c                	jne    100497 <intr_enable+0x1c>
  10048b:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [ebp-0xc],0x1
  100492:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100495:	eb 0b                	jmp    1004a2 <intr_enable+0x27>
  100497:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
  10049e:	fb                   	sti    
  10049f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  1004a2:	c9                   	leave  
  1004a3:	c3                   	ret    

001004a4 <intr_disable>:
  1004a4:	55                   	push   ebp
  1004a5:	89 e5                	mov    ebp,esp
  1004a7:	83 ec 18             	sub    esp,0x18
  1004aa:	e8 3c 00 00 00       	call   1004eb <intr_get_status>
  1004af:	83 f8 01             	cmp    eax,0x1
  1004b2:	75 0d                	jne    1004c1 <intr_disable+0x1d>
  1004b4:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [ebp-0xc],0x1
  1004bb:	fa                   	cli    
  1004bc:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  1004bf:	eb 0a                	jmp    1004cb <intr_disable+0x27>
  1004c1:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
  1004c8:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  1004cb:	c9                   	leave  
  1004cc:	c3                   	ret    

001004cd <intr_set_status>:
  1004cd:	55                   	push   ebp
  1004ce:	89 e5                	mov    ebp,esp
  1004d0:	83 ec 08             	sub    esp,0x8
  1004d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1004d6:	83 e0 01             	and    eax,0x1
  1004d9:	84 c0                	test   al,al
  1004db:	74 07                	je     1004e4 <intr_set_status+0x17>
  1004dd:	e8 99 ff ff ff       	call   10047b <intr_enable>
  1004e2:	eb 05                	jmp    1004e9 <intr_set_status+0x1c>
  1004e4:	e8 bb ff ff ff       	call   1004a4 <intr_disable>
  1004e9:	c9                   	leave  
  1004ea:	c3                   	ret    

001004eb <intr_get_status>:
  1004eb:	55                   	push   ebp
  1004ec:	89 e5                	mov    ebp,esp
  1004ee:	53                   	push   ebx
  1004ef:	83 ec 10             	sub    esp,0x10
  1004f2:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
  1004f9:	9c                   	pushf  
  1004fa:	5b                   	pop    ebx
  1004fb:	89 5d f8             	mov    DWORD PTR [ebp-0x8],ebx
  1004fe:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
  100501:	25 00 02 00 00       	and    eax,0x200
  100506:	85 c0                	test   eax,eax
  100508:	0f 95 c0             	setne  al
  10050b:	0f b6 c0             	movzx  eax,al
  10050e:	83 c4 10             	add    esp,0x10
  100511:	5b                   	pop    ebx
  100512:	5d                   	pop    ebp
  100513:	c3                   	ret    

00100514 <idt_init>:
  100514:	55                   	push   ebp
  100515:	89 e5                	mov    ebp,esp
  100517:	56                   	push   esi
  100518:	53                   	push   ebx
  100519:	83 ec 20             	sub    esp,0x20
  10051c:	c7 04 24 96 16 10 00 	mov    DWORD PTR [esp],0x101696
  100523:	e8 99 fb ff ff       	call   1000c1 <put_str>
  100528:	e8 c7 fd ff ff       	call   1002f4 <idt_desc_init>
  10052d:	e8 54 fe ff ff       	call   100386 <exception_init>
  100532:	e8 9f fc ff ff       	call   1001d6 <pic_init>
  100537:	b8 e0 24 10 00       	mov    eax,0x1024e0
  10053c:	ba 00 00 00 00       	mov    edx,0x0
  100541:	0f a4 c2 10          	shld   edx,eax,0x10
  100545:	c1 e0 10             	shl    eax,0x10
  100548:	89 c3                	mov    ebx,eax
  10054a:	81 cb 07 01 00 00    	or     ebx,0x107
  100550:	89 d6                	mov    esi,edx
  100552:	83 ce 00             	or     esi,0x0
  100555:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
  100558:	89 75 f4             	mov    DWORD PTR [ebp-0xc],esi
  10055b:	0f 01 5d f0          	lidtd  [ebp-0x10]
  10055f:	c7 04 24 a6 16 10 00 	mov    DWORD PTR [esp],0x1016a6
  100566:	e8 56 fb ff ff       	call   1000c1 <put_str>
  10056b:	83 c4 20             	add    esp,0x20
  10056e:	5b                   	pop    ebx
  10056f:	5e                   	pop    esi
  100570:	5d                   	pop    ebp
  100571:	c3                   	ret    
  100572:	90                   	nop
  100573:	90                   	nop
  100574:	90                   	nop
  100575:	90                   	nop
  100576:	90                   	nop
  100577:	90                   	nop
  100578:	90                   	nop
  100579:	90                   	nop
  10057a:	90                   	nop
  10057b:	90                   	nop
  10057c:	90                   	nop
  10057d:	90                   	nop
  10057e:	90                   	nop
  10057f:	90                   	nop

00100580 <intr_exit>:
  100580:	81 c4 04 00 00 00    	add    esp,0x4
  100586:	61                   	popa   
  100587:	0f a9                	pop    gs
  100589:	0f a1                	pop    fs
  10058b:	07                   	pop    es
  10058c:	1f                   	pop    ds
  10058d:	81 c4 04 00 00 00    	add    esp,0x4
  100593:	cf                   	iret   

00100594 <intr0x00entry>:
  100594:	68 00 00 00 00       	push   0x0
  100599:	1e                   	push   ds
  10059a:	06                   	push   es
  10059b:	0f a0                	push   fs
  10059d:	0f a8                	push   gs
  10059f:	60                   	pusha  
  1005a0:	b0 20                	mov    al,0x20
  1005a2:	e6 a0                	out    0xa0,al
  1005a4:	e6 20                	out    0x20,al
  1005a6:	68 00 00 00 00       	push   0x0
  1005ab:	ff 15 a0 26 10 00    	call   DWORD PTR ds:0x1026a0
  1005b1:	e9 ca ff ff ff       	jmp    100580 <intr_exit>

001005b6 <intr0x01entry>:
  1005b6:	68 00 00 00 00       	push   0x0
  1005bb:	1e                   	push   ds
  1005bc:	06                   	push   es
  1005bd:	0f a0                	push   fs
  1005bf:	0f a8                	push   gs
  1005c1:	60                   	pusha  
  1005c2:	b0 20                	mov    al,0x20
  1005c4:	e6 a0                	out    0xa0,al
  1005c6:	e6 20                	out    0x20,al
  1005c8:	68 01 00 00 00       	push   0x1
  1005cd:	ff 15 a4 26 10 00    	call   DWORD PTR ds:0x1026a4
  1005d3:	e9 a8 ff ff ff       	jmp    100580 <intr_exit>

001005d8 <intr0x02entry>:
  1005d8:	68 00 00 00 00       	push   0x0
  1005dd:	1e                   	push   ds
  1005de:	06                   	push   es
  1005df:	0f a0                	push   fs
  1005e1:	0f a8                	push   gs
  1005e3:	60                   	pusha  
  1005e4:	b0 20                	mov    al,0x20
  1005e6:	e6 a0                	out    0xa0,al
  1005e8:	e6 20                	out    0x20,al
  1005ea:	68 02 00 00 00       	push   0x2
  1005ef:	ff 15 a8 26 10 00    	call   DWORD PTR ds:0x1026a8
  1005f5:	e9 86 ff ff ff       	jmp    100580 <intr_exit>

001005fa <intr0x03entry>:
  1005fa:	68 00 00 00 00       	push   0x0
  1005ff:	1e                   	push   ds
  100600:	06                   	push   es
  100601:	0f a0                	push   fs
  100603:	0f a8                	push   gs
  100605:	60                   	pusha  
  100606:	b0 20                	mov    al,0x20
  100608:	e6 a0                	out    0xa0,al
  10060a:	e6 20                	out    0x20,al
  10060c:	68 03 00 00 00       	push   0x3
  100611:	ff 15 ac 26 10 00    	call   DWORD PTR ds:0x1026ac
  100617:	e9 64 ff ff ff       	jmp    100580 <intr_exit>

0010061c <intr0x04entry>:
  10061c:	68 00 00 00 00       	push   0x0
  100621:	1e                   	push   ds
  100622:	06                   	push   es
  100623:	0f a0                	push   fs
  100625:	0f a8                	push   gs
  100627:	60                   	pusha  
  100628:	b0 20                	mov    al,0x20
  10062a:	e6 a0                	out    0xa0,al
  10062c:	e6 20                	out    0x20,al
  10062e:	68 04 00 00 00       	push   0x4
  100633:	ff 15 b0 26 10 00    	call   DWORD PTR ds:0x1026b0
  100639:	e9 42 ff ff ff       	jmp    100580 <intr_exit>

0010063e <intr0x05entry>:
  10063e:	68 00 00 00 00       	push   0x0
  100643:	1e                   	push   ds
  100644:	06                   	push   es
  100645:	0f a0                	push   fs
  100647:	0f a8                	push   gs
  100649:	60                   	pusha  
  10064a:	b0 20                	mov    al,0x20
  10064c:	e6 a0                	out    0xa0,al
  10064e:	e6 20                	out    0x20,al
  100650:	68 05 00 00 00       	push   0x5
  100655:	ff 15 b4 26 10 00    	call   DWORD PTR ds:0x1026b4
  10065b:	e9 20 ff ff ff       	jmp    100580 <intr_exit>

00100660 <intr0x06entry>:
  100660:	68 00 00 00 00       	push   0x0
  100665:	1e                   	push   ds
  100666:	06                   	push   es
  100667:	0f a0                	push   fs
  100669:	0f a8                	push   gs
  10066b:	60                   	pusha  
  10066c:	b0 20                	mov    al,0x20
  10066e:	e6 a0                	out    0xa0,al
  100670:	e6 20                	out    0x20,al
  100672:	68 06 00 00 00       	push   0x6
  100677:	ff 15 b8 26 10 00    	call   DWORD PTR ds:0x1026b8
  10067d:	e9 fe fe ff ff       	jmp    100580 <intr_exit>

00100682 <intr0x07entry>:
  100682:	68 00 00 00 00       	push   0x0
  100687:	1e                   	push   ds
  100688:	06                   	push   es
  100689:	0f a0                	push   fs
  10068b:	0f a8                	push   gs
  10068d:	60                   	pusha  
  10068e:	b0 20                	mov    al,0x20
  100690:	e6 a0                	out    0xa0,al
  100692:	e6 20                	out    0x20,al
  100694:	68 07 00 00 00       	push   0x7
  100699:	ff 15 bc 26 10 00    	call   DWORD PTR ds:0x1026bc
  10069f:	e9 dc fe ff ff       	jmp    100580 <intr_exit>

001006a4 <intr0x08entry>:
  1006a4:	90                   	nop
  1006a5:	1e                   	push   ds
  1006a6:	06                   	push   es
  1006a7:	0f a0                	push   fs
  1006a9:	0f a8                	push   gs
  1006ab:	60                   	pusha  
  1006ac:	b0 20                	mov    al,0x20
  1006ae:	e6 a0                	out    0xa0,al
  1006b0:	e6 20                	out    0x20,al
  1006b2:	68 08 00 00 00       	push   0x8
  1006b7:	ff 15 c0 26 10 00    	call   DWORD PTR ds:0x1026c0
  1006bd:	e9 be fe ff ff       	jmp    100580 <intr_exit>

001006c2 <intr0x09entry>:
  1006c2:	68 00 00 00 00       	push   0x0
  1006c7:	1e                   	push   ds
  1006c8:	06                   	push   es
  1006c9:	0f a0                	push   fs
  1006cb:	0f a8                	push   gs
  1006cd:	60                   	pusha  
  1006ce:	b0 20                	mov    al,0x20
  1006d0:	e6 a0                	out    0xa0,al
  1006d2:	e6 20                	out    0x20,al
  1006d4:	68 09 00 00 00       	push   0x9
  1006d9:	ff 15 c4 26 10 00    	call   DWORD PTR ds:0x1026c4
  1006df:	e9 9c fe ff ff       	jmp    100580 <intr_exit>

001006e4 <intr0x0aentry>:
  1006e4:	90                   	nop
  1006e5:	1e                   	push   ds
  1006e6:	06                   	push   es
  1006e7:	0f a0                	push   fs
  1006e9:	0f a8                	push   gs
  1006eb:	60                   	pusha  
  1006ec:	b0 20                	mov    al,0x20
  1006ee:	e6 a0                	out    0xa0,al
  1006f0:	e6 20                	out    0x20,al
  1006f2:	68 0a 00 00 00       	push   0xa
  1006f7:	ff 15 c8 26 10 00    	call   DWORD PTR ds:0x1026c8
  1006fd:	e9 7e fe ff ff       	jmp    100580 <intr_exit>

00100702 <intr0x0bentry>:
  100702:	90                   	nop
  100703:	1e                   	push   ds
  100704:	06                   	push   es
  100705:	0f a0                	push   fs
  100707:	0f a8                	push   gs
  100709:	60                   	pusha  
  10070a:	b0 20                	mov    al,0x20
  10070c:	e6 a0                	out    0xa0,al
  10070e:	e6 20                	out    0x20,al
  100710:	68 0b 00 00 00       	push   0xb
  100715:	ff 15 cc 26 10 00    	call   DWORD PTR ds:0x1026cc
  10071b:	e9 60 fe ff ff       	jmp    100580 <intr_exit>

00100720 <intr0x0centry>:
  100720:	68 00 00 00 00       	push   0x0
  100725:	1e                   	push   ds
  100726:	06                   	push   es
  100727:	0f a0                	push   fs
  100729:	0f a8                	push   gs
  10072b:	60                   	pusha  
  10072c:	b0 20                	mov    al,0x20
  10072e:	e6 a0                	out    0xa0,al
  100730:	e6 20                	out    0x20,al
  100732:	68 0c 00 00 00       	push   0xc
  100737:	ff 15 d0 26 10 00    	call   DWORD PTR ds:0x1026d0
  10073d:	e9 3e fe ff ff       	jmp    100580 <intr_exit>

00100742 <intr0x0dentry>:
  100742:	90                   	nop
  100743:	1e                   	push   ds
  100744:	06                   	push   es
  100745:	0f a0                	push   fs
  100747:	0f a8                	push   gs
  100749:	60                   	pusha  
  10074a:	b0 20                	mov    al,0x20
  10074c:	e6 a0                	out    0xa0,al
  10074e:	e6 20                	out    0x20,al
  100750:	68 0d 00 00 00       	push   0xd
  100755:	ff 15 d4 26 10 00    	call   DWORD PTR ds:0x1026d4
  10075b:	e9 20 fe ff ff       	jmp    100580 <intr_exit>

00100760 <intr0x0eentry>:
  100760:	90                   	nop
  100761:	1e                   	push   ds
  100762:	06                   	push   es
  100763:	0f a0                	push   fs
  100765:	0f a8                	push   gs
  100767:	60                   	pusha  
  100768:	b0 20                	mov    al,0x20
  10076a:	e6 a0                	out    0xa0,al
  10076c:	e6 20                	out    0x20,al
  10076e:	68 0e 00 00 00       	push   0xe
  100773:	ff 15 d8 26 10 00    	call   DWORD PTR ds:0x1026d8
  100779:	e9 02 fe ff ff       	jmp    100580 <intr_exit>

0010077e <intr0x0fentry>:
  10077e:	68 00 00 00 00       	push   0x0
  100783:	1e                   	push   ds
  100784:	06                   	push   es
  100785:	0f a0                	push   fs
  100787:	0f a8                	push   gs
  100789:	60                   	pusha  
  10078a:	b0 20                	mov    al,0x20
  10078c:	e6 a0                	out    0xa0,al
  10078e:	e6 20                	out    0x20,al
  100790:	68 0f 00 00 00       	push   0xf
  100795:	ff 15 dc 26 10 00    	call   DWORD PTR ds:0x1026dc
  10079b:	e9 e0 fd ff ff       	jmp    100580 <intr_exit>

001007a0 <intr0x10entry>:
  1007a0:	68 00 00 00 00       	push   0x0
  1007a5:	1e                   	push   ds
  1007a6:	06                   	push   es
  1007a7:	0f a0                	push   fs
  1007a9:	0f a8                	push   gs
  1007ab:	60                   	pusha  
  1007ac:	b0 20                	mov    al,0x20
  1007ae:	e6 a0                	out    0xa0,al
  1007b0:	e6 20                	out    0x20,al
  1007b2:	68 10 00 00 00       	push   0x10
  1007b7:	ff 15 e0 26 10 00    	call   DWORD PTR ds:0x1026e0
  1007bd:	e9 be fd ff ff       	jmp    100580 <intr_exit>

001007c2 <intr0x11entry>:
  1007c2:	90                   	nop
  1007c3:	1e                   	push   ds
  1007c4:	06                   	push   es
  1007c5:	0f a0                	push   fs
  1007c7:	0f a8                	push   gs
  1007c9:	60                   	pusha  
  1007ca:	b0 20                	mov    al,0x20
  1007cc:	e6 a0                	out    0xa0,al
  1007ce:	e6 20                	out    0x20,al
  1007d0:	68 11 00 00 00       	push   0x11
  1007d5:	ff 15 e4 26 10 00    	call   DWORD PTR ds:0x1026e4
  1007db:	e9 a0 fd ff ff       	jmp    100580 <intr_exit>

001007e0 <intr0x12entry>:
  1007e0:	68 00 00 00 00       	push   0x0
  1007e5:	1e                   	push   ds
  1007e6:	06                   	push   es
  1007e7:	0f a0                	push   fs
  1007e9:	0f a8                	push   gs
  1007eb:	60                   	pusha  
  1007ec:	b0 20                	mov    al,0x20
  1007ee:	e6 a0                	out    0xa0,al
  1007f0:	e6 20                	out    0x20,al
  1007f2:	68 12 00 00 00       	push   0x12
  1007f7:	ff 15 e8 26 10 00    	call   DWORD PTR ds:0x1026e8
  1007fd:	e9 7e fd ff ff       	jmp    100580 <intr_exit>

00100802 <intr0x13entry>:
  100802:	68 00 00 00 00       	push   0x0
  100807:	1e                   	push   ds
  100808:	06                   	push   es
  100809:	0f a0                	push   fs
  10080b:	0f a8                	push   gs
  10080d:	60                   	pusha  
  10080e:	b0 20                	mov    al,0x20
  100810:	e6 a0                	out    0xa0,al
  100812:	e6 20                	out    0x20,al
  100814:	68 13 00 00 00       	push   0x13
  100819:	ff 15 ec 26 10 00    	call   DWORD PTR ds:0x1026ec
  10081f:	e9 5c fd ff ff       	jmp    100580 <intr_exit>

00100824 <intr0x14entry>:
  100824:	68 00 00 00 00       	push   0x0
  100829:	1e                   	push   ds
  10082a:	06                   	push   es
  10082b:	0f a0                	push   fs
  10082d:	0f a8                	push   gs
  10082f:	60                   	pusha  
  100830:	b0 20                	mov    al,0x20
  100832:	e6 a0                	out    0xa0,al
  100834:	e6 20                	out    0x20,al
  100836:	68 14 00 00 00       	push   0x14
  10083b:	ff 15 f0 26 10 00    	call   DWORD PTR ds:0x1026f0
  100841:	e9 3a fd ff ff       	jmp    100580 <intr_exit>

00100846 <intr0x15entry>:
  100846:	68 00 00 00 00       	push   0x0
  10084b:	1e                   	push   ds
  10084c:	06                   	push   es
  10084d:	0f a0                	push   fs
  10084f:	0f a8                	push   gs
  100851:	60                   	pusha  
  100852:	b0 20                	mov    al,0x20
  100854:	e6 a0                	out    0xa0,al
  100856:	e6 20                	out    0x20,al
  100858:	68 15 00 00 00       	push   0x15
  10085d:	ff 15 f4 26 10 00    	call   DWORD PTR ds:0x1026f4
  100863:	e9 18 fd ff ff       	jmp    100580 <intr_exit>

00100868 <intr0x16entry>:
  100868:	68 00 00 00 00       	push   0x0
  10086d:	1e                   	push   ds
  10086e:	06                   	push   es
  10086f:	0f a0                	push   fs
  100871:	0f a8                	push   gs
  100873:	60                   	pusha  
  100874:	b0 20                	mov    al,0x20
  100876:	e6 a0                	out    0xa0,al
  100878:	e6 20                	out    0x20,al
  10087a:	68 16 00 00 00       	push   0x16
  10087f:	ff 15 f8 26 10 00    	call   DWORD PTR ds:0x1026f8
  100885:	e9 f6 fc ff ff       	jmp    100580 <intr_exit>

0010088a <intr0x17entry>:
  10088a:	68 00 00 00 00       	push   0x0
  10088f:	1e                   	push   ds
  100890:	06                   	push   es
  100891:	0f a0                	push   fs
  100893:	0f a8                	push   gs
  100895:	60                   	pusha  
  100896:	b0 20                	mov    al,0x20
  100898:	e6 a0                	out    0xa0,al
  10089a:	e6 20                	out    0x20,al
  10089c:	68 17 00 00 00       	push   0x17
  1008a1:	ff 15 fc 26 10 00    	call   DWORD PTR ds:0x1026fc
  1008a7:	e9 d4 fc ff ff       	jmp    100580 <intr_exit>

001008ac <intr0x18entry>:
  1008ac:	90                   	nop
  1008ad:	1e                   	push   ds
  1008ae:	06                   	push   es
  1008af:	0f a0                	push   fs
  1008b1:	0f a8                	push   gs
  1008b3:	60                   	pusha  
  1008b4:	b0 20                	mov    al,0x20
  1008b6:	e6 a0                	out    0xa0,al
  1008b8:	e6 20                	out    0x20,al
  1008ba:	68 18 00 00 00       	push   0x18
  1008bf:	ff 15 00 27 10 00    	call   DWORD PTR ds:0x102700
  1008c5:	e9 b6 fc ff ff       	jmp    100580 <intr_exit>

001008ca <intr0x19entry>:
  1008ca:	68 00 00 00 00       	push   0x0
  1008cf:	1e                   	push   ds
  1008d0:	06                   	push   es
  1008d1:	0f a0                	push   fs
  1008d3:	0f a8                	push   gs
  1008d5:	60                   	pusha  
  1008d6:	b0 20                	mov    al,0x20
  1008d8:	e6 a0                	out    0xa0,al
  1008da:	e6 20                	out    0x20,al
  1008dc:	68 19 00 00 00       	push   0x19
  1008e1:	ff 15 04 27 10 00    	call   DWORD PTR ds:0x102704
  1008e7:	e9 94 fc ff ff       	jmp    100580 <intr_exit>

001008ec <intr0x1aentry>:
  1008ec:	90                   	nop
  1008ed:	1e                   	push   ds
  1008ee:	06                   	push   es
  1008ef:	0f a0                	push   fs
  1008f1:	0f a8                	push   gs
  1008f3:	60                   	pusha  
  1008f4:	b0 20                	mov    al,0x20
  1008f6:	e6 a0                	out    0xa0,al
  1008f8:	e6 20                	out    0x20,al
  1008fa:	68 1a 00 00 00       	push   0x1a
  1008ff:	ff 15 08 27 10 00    	call   DWORD PTR ds:0x102708
  100905:	e9 76 fc ff ff       	jmp    100580 <intr_exit>

0010090a <intr0x1bentry>:
  10090a:	90                   	nop
  10090b:	1e                   	push   ds
  10090c:	06                   	push   es
  10090d:	0f a0                	push   fs
  10090f:	0f a8                	push   gs
  100911:	60                   	pusha  
  100912:	b0 20                	mov    al,0x20
  100914:	e6 a0                	out    0xa0,al
  100916:	e6 20                	out    0x20,al
  100918:	68 1b 00 00 00       	push   0x1b
  10091d:	ff 15 0c 27 10 00    	call   DWORD PTR ds:0x10270c
  100923:	e9 58 fc ff ff       	jmp    100580 <intr_exit>

00100928 <intr0x1centry>:
  100928:	68 00 00 00 00       	push   0x0
  10092d:	1e                   	push   ds
  10092e:	06                   	push   es
  10092f:	0f a0                	push   fs
  100931:	0f a8                	push   gs
  100933:	60                   	pusha  
  100934:	b0 20                	mov    al,0x20
  100936:	e6 a0                	out    0xa0,al
  100938:	e6 20                	out    0x20,al
  10093a:	68 1c 00 00 00       	push   0x1c
  10093f:	ff 15 10 27 10 00    	call   DWORD PTR ds:0x102710
  100945:	e9 36 fc ff ff       	jmp    100580 <intr_exit>

0010094a <intr0x1dentry>:
  10094a:	90                   	nop
  10094b:	1e                   	push   ds
  10094c:	06                   	push   es
  10094d:	0f a0                	push   fs
  10094f:	0f a8                	push   gs
  100951:	60                   	pusha  
  100952:	b0 20                	mov    al,0x20
  100954:	e6 a0                	out    0xa0,al
  100956:	e6 20                	out    0x20,al
  100958:	68 1d 00 00 00       	push   0x1d
  10095d:	ff 15 14 27 10 00    	call   DWORD PTR ds:0x102714
  100963:	e9 18 fc ff ff       	jmp    100580 <intr_exit>

00100968 <intr0x1eentry>:
  100968:	90                   	nop
  100969:	1e                   	push   ds
  10096a:	06                   	push   es
  10096b:	0f a0                	push   fs
  10096d:	0f a8                	push   gs
  10096f:	60                   	pusha  
  100970:	b0 20                	mov    al,0x20
  100972:	e6 a0                	out    0xa0,al
  100974:	e6 20                	out    0x20,al
  100976:	68 1e 00 00 00       	push   0x1e
  10097b:	ff 15 18 27 10 00    	call   DWORD PTR ds:0x102718
  100981:	e9 fa fb ff ff       	jmp    100580 <intr_exit>

00100986 <intr0x1fentry>:
  100986:	68 00 00 00 00       	push   0x0
  10098b:	1e                   	push   ds
  10098c:	06                   	push   es
  10098d:	0f a0                	push   fs
  10098f:	0f a8                	push   gs
  100991:	60                   	pusha  
  100992:	b0 20                	mov    al,0x20
  100994:	e6 a0                	out    0xa0,al
  100996:	e6 20                	out    0x20,al
  100998:	68 1f 00 00 00       	push   0x1f
  10099d:	ff 15 1c 27 10 00    	call   DWORD PTR ds:0x10271c
  1009a3:	e9 d8 fb ff ff       	jmp    100580 <intr_exit>

001009a8 <intr0x20entry>:
  1009a8:	68 00 00 00 00       	push   0x0
  1009ad:	1e                   	push   ds
  1009ae:	06                   	push   es
  1009af:	0f a0                	push   fs
  1009b1:	0f a8                	push   gs
  1009b3:	60                   	pusha  
  1009b4:	b0 20                	mov    al,0x20
  1009b6:	e6 a0                	out    0xa0,al
  1009b8:	e6 20                	out    0x20,al
  1009ba:	68 20 00 00 00       	push   0x20
  1009bf:	ff 15 20 27 10 00    	call   DWORD PTR ds:0x102720
  1009c5:	e9 b6 fb ff ff       	jmp    100580 <intr_exit>
  1009ca:	90                   	nop
  1009cb:	90                   	nop

001009cc <init_all>:
  1009cc:	55                   	push   ebp
  1009cd:	89 e5                	mov    ebp,esp
  1009cf:	83 ec 18             	sub    esp,0x18
  1009d2:	c7 04 24 b5 16 10 00 	mov    DWORD PTR [esp],0x1016b5
  1009d9:	e8 e3 f6 ff ff       	call   1000c1 <put_str>
  1009de:	e8 31 fb ff ff       	call   100514 <idt_init>
  1009e3:	e8 be 00 00 00       	call   100aa6 <timer_init>
  1009e8:	e8 1e 0a 00 00       	call   10140b <mem_init>
  1009ed:	c9                   	leave  
  1009ee:	c3                   	ret    
  1009ef:	90                   	nop

001009f0 <outb>:
  1009f0:	55                   	push   ebp
  1009f1:	89 e5                	mov    ebp,esp
  1009f3:	83 ec 08             	sub    esp,0x8
  1009f6:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  1009f9:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1009fc:	66 89 55 fc          	mov    WORD PTR [ebp-0x4],dx
  100a00:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al
  100a03:	0f b6 45 f8          	movzx  eax,BYTE PTR [ebp-0x8]
  100a07:	0f b7 55 fc          	movzx  edx,WORD PTR [ebp-0x4]
  100a0b:	ee                   	out    dx,al
  100a0c:	c9                   	leave  
  100a0d:	c3                   	ret    

00100a0e <frequency_set>:
  100a0e:	55                   	push   ebp
  100a0f:	89 e5                	mov    ebp,esp
  100a11:	56                   	push   esi
  100a12:	53                   	push   ebx
  100a13:	83 ec 20             	sub    esp,0x20
  100a16:	8b 75 08             	mov    esi,DWORD PTR [ebp+0x8]
  100a19:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
  100a1c:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
  100a1f:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
  100a22:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
  100a25:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
  100a28:	89 f0                	mov    eax,esi
  100a2a:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
  100a2d:	88 5d f0             	mov    BYTE PTR [ebp-0x10],bl
  100a30:	88 4d ec             	mov    BYTE PTR [ebp-0x14],cl
  100a33:	88 55 e8             	mov    BYTE PTR [ebp-0x18],dl
  100a36:	0f b7 45 e0          	movzx  eax,WORD PTR [ebp-0x20]
  100a3a:	66 89 45 e4          	mov    WORD PTR [ebp-0x1c],ax
  100a3e:	0f b6 45 f0          	movzx  eax,BYTE PTR [ebp-0x10]
  100a42:	c1 e0 06             	shl    eax,0x6
  100a45:	89 c2                	mov    edx,eax
  100a47:	0f b6 45 ec          	movzx  eax,BYTE PTR [ebp-0x14]
  100a4b:	c1 e0 04             	shl    eax,0x4
  100a4e:	09 c2                	or     edx,eax
  100a50:	0f b6 45 e8          	movzx  eax,BYTE PTR [ebp-0x18]
  100a54:	01 c0                	add    eax,eax
  100a56:	09 d0                	or     eax,edx
  100a58:	0f b6 c0             	movzx  eax,al
  100a5b:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  100a5f:	c7 04 24 43 00 00 00 	mov    DWORD PTR [esp],0x43
  100a66:	e8 85 ff ff ff       	call   1009f0 <outb>
  100a6b:	0f b7 45 e4          	movzx  eax,WORD PTR [ebp-0x1c]
  100a6f:	0f b6 d0             	movzx  edx,al
  100a72:	0f b6 45 f4          	movzx  eax,BYTE PTR [ebp-0xc]
  100a76:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
  100a7a:	89 04 24             	mov    DWORD PTR [esp],eax
  100a7d:	e8 6e ff ff ff       	call   1009f0 <outb>
  100a82:	0f b7 45 e4          	movzx  eax,WORD PTR [ebp-0x1c]
  100a86:	0f b6 c0             	movzx  eax,al
  100a89:	c1 f8 08             	sar    eax,0x8
  100a8c:	0f b6 d0             	movzx  edx,al
  100a8f:	0f b6 45 f4          	movzx  eax,BYTE PTR [ebp-0xc]
  100a93:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
  100a97:	89 04 24             	mov    DWORD PTR [esp],eax
  100a9a:	e8 51 ff ff ff       	call   1009f0 <outb>
  100a9f:	83 c4 20             	add    esp,0x20
  100aa2:	5b                   	pop    ebx
  100aa3:	5e                   	pop    esi
  100aa4:	5d                   	pop    ebp
  100aa5:	c3                   	ret    

00100aa6 <timer_init>:
  100aa6:	55                   	push   ebp
  100aa7:	89 e5                	mov    ebp,esp
  100aa9:	83 ec 28             	sub    esp,0x28
  100aac:	c7 04 24 bf 16 10 00 	mov    DWORD PTR [esp],0x1016bf
  100ab3:	e8 09 f6 ff ff       	call   1000c1 <put_str>
  100ab8:	c7 44 24 10 9b 2e 00 	mov    DWORD PTR [esp+0x10],0x2e9b
  100abf:	00 
  100ac0:	c7 44 24 0c 02 00 00 	mov    DWORD PTR [esp+0xc],0x2
  100ac7:	00 
  100ac8:	c7 44 24 08 03 00 00 	mov    DWORD PTR [esp+0x8],0x3
  100acf:	00 
  100ad0:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  100ad7:	00 
  100ad8:	c7 04 24 40 00 00 00 	mov    DWORD PTR [esp],0x40
  100adf:	e8 2a ff ff ff       	call   100a0e <frequency_set>
  100ae4:	c7 04 24 d1 16 10 00 	mov    DWORD PTR [esp],0x1016d1
  100aeb:	e8 d1 f5 ff ff       	call   1000c1 <put_str>
  100af0:	c9                   	leave  
  100af1:	c3                   	ret    
  100af2:	90                   	nop
  100af3:	90                   	nop

00100af4 <panic_spin>:
  100af4:	55                   	push   ebp
  100af5:	89 e5                	mov    ebp,esp
  100af7:	83 ec 18             	sub    esp,0x18
  100afa:	e8 a5 f9 ff ff       	call   1004a4 <intr_disable>
  100aff:	c7 04 24 e2 16 10 00 	mov    DWORD PTR [esp],0x1016e2
  100b06:	e8 b6 f5 ff ff       	call   1000c1 <put_str>
  100b0b:	c7 04 24 f8 16 10 00 	mov    DWORD PTR [esp],0x1016f8
  100b12:	e8 aa f5 ff ff       	call   1000c1 <put_str>
  100b17:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100b1a:	89 04 24             	mov    DWORD PTR [esp],eax
  100b1d:	e8 9f f5 ff ff       	call   1000c1 <put_str>
  100b22:	c7 04 24 02 17 10 00 	mov    DWORD PTR [esp],0x101702
  100b29:	e8 93 f5 ff ff       	call   1000c1 <put_str>
  100b2e:	c7 04 24 04 17 10 00 	mov    DWORD PTR [esp],0x101704
  100b35:	e8 87 f5 ff ff       	call   1000c1 <put_str>
  100b3a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100b3d:	89 04 24             	mov    DWORD PTR [esp],eax
  100b40:	e8 fb f4 ff ff       	call   100040 <put_int>
  100b45:	c7 04 24 02 17 10 00 	mov    DWORD PTR [esp],0x101702
  100b4c:	e8 70 f5 ff ff       	call   1000c1 <put_str>
  100b51:	c7 04 24 0c 17 10 00 	mov    DWORD PTR [esp],0x10170c
  100b58:	e8 64 f5 ff ff       	call   1000c1 <put_str>
  100b5d:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  100b60:	89 04 24             	mov    DWORD PTR [esp],eax
  100b63:	e8 59 f5 ff ff       	call   1000c1 <put_str>
  100b68:	c7 04 24 02 17 10 00 	mov    DWORD PTR [esp],0x101702
  100b6f:	e8 4d f5 ff ff       	call   1000c1 <put_str>
  100b74:	c7 04 24 16 17 10 00 	mov    DWORD PTR [esp],0x101716
  100b7b:	e8 41 f5 ff ff       	call   1000c1 <put_str>
  100b80:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
  100b83:	89 04 24             	mov    DWORD PTR [esp],eax
  100b86:	e8 36 f5 ff ff       	call   1000c1 <put_str>
  100b8b:	c7 04 24 02 17 10 00 	mov    DWORD PTR [esp],0x101702
  100b92:	e8 2a f5 ff ff       	call   1000c1 <put_str>
  100b97:	eb fe                	jmp    100b97 <panic_spin+0xa3>
  100b99:	90                   	nop
  100b9a:	90                   	nop
  100b9b:	90                   	nop

00100b9c <memset>:
  100b9c:	55                   	push   ebp
  100b9d:	89 e5                	mov    ebp,esp
  100b9f:	83 ec 38             	sub    esp,0x38
  100ba2:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100ba5:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
  100ba8:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100bac:	75 24                	jne    100bd2 <memset+0x36>
  100bae:	c7 44 24 0c 21 17 10 	mov    DWORD PTR [esp+0xc],0x101721
  100bb5:	00 
  100bb6:	c7 44 24 08 cf 17 10 	mov    DWORD PTR [esp+0x8],0x1017cf
  100bbd:	00 
  100bbe:	c7 44 24 04 07 00 00 	mov    DWORD PTR [esp+0x4],0x7
  100bc5:	00 
  100bc6:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100bcd:	e8 22 ff ff ff       	call   100af4 <panic_spin>
  100bd2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100bd5:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  100bd8:	eb 0d                	jmp    100be7 <memset+0x4b>
  100bda:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100bdd:	0f b6 55 e4          	movzx  edx,BYTE PTR [ebp-0x1c]
  100be1:	88 10                	mov    BYTE PTR [eax],dl
  100be3:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100be7:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
  100beb:	0f 95 c0             	setne  al
  100bee:	83 6d 10 01          	sub    DWORD PTR [ebp+0x10],0x1
  100bf2:	84 c0                	test   al,al
  100bf4:	75 e4                	jne    100bda <memset+0x3e>
  100bf6:	c9                   	leave  
  100bf7:	c3                   	ret    

00100bf8 <memcpy>:
  100bf8:	55                   	push   ebp
  100bf9:	89 e5                	mov    ebp,esp
  100bfb:	83 ec 28             	sub    esp,0x28
  100bfe:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100c02:	74 06                	je     100c0a <memcpy+0x12>
  100c04:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
  100c08:	75 24                	jne    100c2e <memcpy+0x36>
  100c0a:	c7 44 24 0c 37 17 10 	mov    DWORD PTR [esp+0xc],0x101737
  100c11:	00 
  100c12:	c7 44 24 08 c8 17 10 	mov    DWORD PTR [esp+0x8],0x1017c8
  100c19:	00 
  100c1a:	c7 44 24 04 0f 00 00 	mov    DWORD PTR [esp+0x4],0xf
  100c21:	00 
  100c22:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100c29:	e8 c6 fe ff ff       	call   100af4 <panic_spin>
  100c2e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100c31:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  100c34:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100c37:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
  100c3a:	eb 13                	jmp    100c4f <memcpy+0x57>
  100c3c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  100c3f:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100c42:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100c45:	88 10                	mov    BYTE PTR [eax],dl
  100c47:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100c4b:	83 45 f0 01          	add    DWORD PTR [ebp-0x10],0x1
  100c4f:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
  100c53:	0f 95 c0             	setne  al
  100c56:	83 6d 10 01          	sub    DWORD PTR [ebp+0x10],0x1
  100c5a:	84 c0                	test   al,al
  100c5c:	75 de                	jne    100c3c <memcpy+0x44>
  100c5e:	c9                   	leave  
  100c5f:	c3                   	ret    

00100c60 <memcmp>:
  100c60:	55                   	push   ebp
  100c61:	89 e5                	mov    ebp,esp
  100c63:	83 ec 28             	sub    esp,0x28
  100c66:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100c69:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  100c6c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100c6f:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
  100c72:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
  100c76:	75 64                	jne    100cdc <memcmp+0x7c>
  100c78:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
  100c7c:	75 5e                	jne    100cdc <memcmp+0x7c>
  100c7e:	c7 44 24 0c 54 17 10 	mov    DWORD PTR [esp+0xc],0x101754
  100c85:	00 
  100c86:	c7 44 24 08 c1 17 10 	mov    DWORD PTR [esp+0x8],0x1017c1
  100c8d:	00 
  100c8e:	c7 44 24 04 1a 00 00 	mov    DWORD PTR [esp+0x4],0x1a
  100c95:	00 
  100c96:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100c9d:	e8 52 fe ff ff       	call   100af4 <panic_spin>
  100ca2:	eb 38                	jmp    100cdc <memcmp+0x7c>
  100ca4:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100ca7:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100caa:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  100cad:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100cb0:	38 c2                	cmp    dl,al
  100cb2:	74 1e                	je     100cd2 <memcmp+0x72>
  100cb4:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100cb7:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100cba:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  100cbd:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100cc0:	38 c2                	cmp    dl,al
  100cc2:	7e 07                	jle    100ccb <memcmp+0x6b>
  100cc4:	b8 01 00 00 00       	mov    eax,0x1
  100cc9:	eb 05                	jmp    100cd0 <memcmp+0x70>
  100ccb:	b8 ff ff ff ff       	mov    eax,0xffffffff
  100cd0:	eb 1f                	jmp    100cf1 <memcmp+0x91>
  100cd2:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100cd6:	83 45 f0 01          	add    DWORD PTR [ebp-0x10],0x1
  100cda:	eb 01                	jmp    100cdd <memcmp+0x7d>
  100cdc:	90                   	nop
  100cdd:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
  100ce1:	0f 95 c0             	setne  al
  100ce4:	83 6d 10 01          	sub    DWORD PTR [ebp+0x10],0x1
  100ce8:	84 c0                	test   al,al
  100cea:	75 b8                	jne    100ca4 <memcmp+0x44>
  100cec:	b8 00 00 00 00       	mov    eax,0x0
  100cf1:	c9                   	leave  
  100cf2:	c3                   	ret    

00100cf3 <strcpy>:
  100cf3:	55                   	push   ebp
  100cf4:	89 e5                	mov    ebp,esp
  100cf6:	83 ec 28             	sub    esp,0x28
  100cf9:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100cfd:	74 06                	je     100d05 <strcpy+0x12>
  100cff:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
  100d03:	75 24                	jne    100d29 <strcpy+0x36>
  100d05:	c7 44 24 0c 37 17 10 	mov    DWORD PTR [esp+0xc],0x101737
  100d0c:	00 
  100d0d:	c7 44 24 08 ba 17 10 	mov    DWORD PTR [esp+0x8],0x1017ba
  100d14:	00 
  100d15:	c7 44 24 04 27 00 00 	mov    DWORD PTR [esp+0x4],0x27
  100d1c:	00 
  100d1d:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100d24:	e8 cb fd ff ff       	call   100af4 <panic_spin>
  100d29:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100d2c:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  100d2f:	90                   	nop
  100d30:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100d33:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100d36:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100d39:	88 10                	mov    BYTE PTR [eax],dl
  100d3b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100d3e:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100d41:	84 c0                	test   al,al
  100d43:	0f 95 c0             	setne  al
  100d46:	83 45 08 01          	add    DWORD PTR [ebp+0x8],0x1
  100d4a:	83 45 0c 01          	add    DWORD PTR [ebp+0xc],0x1
  100d4e:	84 c0                	test   al,al
  100d50:	75 de                	jne    100d30 <strcpy+0x3d>
  100d52:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100d55:	c9                   	leave  
  100d56:	c3                   	ret    

00100d57 <strlen>:
  100d57:	55                   	push   ebp
  100d58:	89 e5                	mov    ebp,esp
  100d5a:	83 ec 28             	sub    esp,0x28
  100d5d:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100d61:	75 24                	jne    100d87 <strlen+0x30>
  100d63:	c7 44 24 0c 6b 17 10 	mov    DWORD PTR [esp+0xc],0x10176b
  100d6a:	00 
  100d6b:	c7 44 24 08 b3 17 10 	mov    DWORD PTR [esp+0x8],0x1017b3
  100d72:	00 
  100d73:	c7 44 24 04 2f 00 00 	mov    DWORD PTR [esp+0x4],0x2f
  100d7a:	00 
  100d7b:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100d82:	e8 6d fd ff ff       	call   100af4 <panic_spin>
  100d87:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100d8a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  100d8d:	90                   	nop
  100d8e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100d91:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100d94:	84 c0                	test   al,al
  100d96:	0f 95 c0             	setne  al
  100d99:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100d9d:	84 c0                	test   al,al
  100d9f:	75 ed                	jne    100d8e <strlen+0x37>
  100da1:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
  100da4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100da7:	89 d1                	mov    ecx,edx
  100da9:	29 c1                	sub    ecx,eax
  100dab:	89 c8                	mov    eax,ecx
  100dad:	83 e8 01             	sub    eax,0x1
  100db0:	c9                   	leave  
  100db1:	c3                   	ret    

00100db2 <strcmp>:
  100db2:	55                   	push   ebp
  100db3:	89 e5                	mov    ebp,esp
  100db5:	83 ec 18             	sub    esp,0x18
  100db8:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100dbc:	74 06                	je     100dc4 <strcmp+0x12>
  100dbe:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
  100dc2:	75 26                	jne    100dea <strcmp+0x38>
  100dc4:	c7 44 24 0c 77 17 10 	mov    DWORD PTR [esp+0xc],0x101777
  100dcb:	00 
  100dcc:	c7 44 24 08 ac 17 10 	mov    DWORD PTR [esp+0x8],0x1017ac
  100dd3:	00 
  100dd4:	c7 44 24 04 37 00 00 	mov    DWORD PTR [esp+0x4],0x37
  100ddb:	00 
  100ddc:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100de3:	e8 0c fd ff ff       	call   100af4 <panic_spin>
  100de8:	eb 0a                	jmp    100df4 <strcmp+0x42>
  100dea:	eb 08                	jmp    100df4 <strcmp+0x42>
  100dec:	83 45 08 01          	add    DWORD PTR [ebp+0x8],0x1
  100df0:	83 45 0c 01          	add    DWORD PTR [ebp+0xc],0x1
  100df4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100df7:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100dfa:	84 c0                	test   al,al
  100dfc:	74 10                	je     100e0e <strcmp+0x5c>
  100dfe:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100e01:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100e04:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100e07:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100e0a:	38 c2                	cmp    dl,al
  100e0c:	74 de                	je     100dec <strcmp+0x3a>
  100e0e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100e11:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100e14:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100e17:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100e1a:	38 c2                	cmp    dl,al
  100e1c:	7c 13                	jl     100e31 <strcmp+0x7f>
  100e1e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100e21:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100e24:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100e27:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100e2a:	38 c2                	cmp    dl,al
  100e2c:	0f 9f c0             	setg   al
  100e2f:	eb 05                	jmp    100e36 <strcmp+0x84>
  100e31:	b8 ff ff ff ff       	mov    eax,0xffffffff
  100e36:	c9                   	leave  
  100e37:	c3                   	ret    

00100e38 <strchr>:
  100e38:	55                   	push   ebp
  100e39:	89 e5                	mov    ebp,esp
  100e3b:	83 ec 28             	sub    esp,0x28
  100e3e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100e41:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
  100e44:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100e48:	75 42                	jne    100e8c <strchr+0x54>
  100e4a:	c7 44 24 0c 6b 17 10 	mov    DWORD PTR [esp+0xc],0x10176b
  100e51:	00 
  100e52:	c7 44 24 08 a5 17 10 	mov    DWORD PTR [esp+0x8],0x1017a5
  100e59:	00 
  100e5a:	c7 44 24 04 43 00 00 	mov    DWORD PTR [esp+0x4],0x43
  100e61:	00 
  100e62:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100e69:	e8 86 fc ff ff       	call   100af4 <panic_spin>
  100e6e:	eb 1c                	jmp    100e8c <strchr+0x54>
  100e70:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100e73:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100e76:	0f be d0             	movsx  edx,al
  100e79:	0f b6 45 f4          	movzx  eax,BYTE PTR [ebp-0xc]
  100e7d:	39 c2                	cmp    edx,eax
  100e7f:	75 05                	jne    100e86 <strchr+0x4e>
  100e81:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100e84:	eb 16                	jmp    100e9c <strchr+0x64>
  100e86:	83 45 08 01          	add    DWORD PTR [ebp+0x8],0x1
  100e8a:	eb 01                	jmp    100e8d <strchr+0x55>
  100e8c:	90                   	nop
  100e8d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100e90:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100e93:	84 c0                	test   al,al
  100e95:	75 d9                	jne    100e70 <strchr+0x38>
  100e97:	b8 00 00 00 00       	mov    eax,0x0
  100e9c:	c9                   	leave  
  100e9d:	c3                   	ret    

00100e9e <strrchr>:
  100e9e:	55                   	push   ebp
  100e9f:	89 e5                	mov    ebp,esp
  100ea1:	83 ec 38             	sub    esp,0x38
  100ea4:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100ea7:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
  100eaa:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100eae:	75 24                	jne    100ed4 <strrchr+0x36>
  100eb0:	c7 44 24 0c 6b 17 10 	mov    DWORD PTR [esp+0xc],0x10176b
  100eb7:	00 
  100eb8:	c7 44 24 08 9d 17 10 	mov    DWORD PTR [esp+0x8],0x10179d
  100ebf:	00 
  100ec0:	c7 44 24 04 4f 00 00 	mov    DWORD PTR [esp+0x4],0x4f
  100ec7:	00 
  100ec8:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100ecf:	e8 20 fc ff ff       	call   100af4 <panic_spin>
  100ed4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
  100edb:	eb 1b                	jmp    100ef8 <strrchr+0x5a>
  100edd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100ee0:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100ee3:	0f be d0             	movsx  edx,al
  100ee6:	0f b6 45 e4          	movzx  eax,BYTE PTR [ebp-0x1c]
  100eea:	39 c2                	cmp    edx,eax
  100eec:	75 06                	jne    100ef4 <strrchr+0x56>
  100eee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100ef1:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  100ef4:	83 45 08 01          	add    DWORD PTR [ebp+0x8],0x1
  100ef8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100efb:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100efe:	84 c0                	test   al,al
  100f00:	75 db                	jne    100edd <strrchr+0x3f>
  100f02:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100f05:	c9                   	leave  
  100f06:	c3                   	ret    

00100f07 <strcat>:
  100f07:	55                   	push   ebp
  100f08:	89 e5                	mov    ebp,esp
  100f0a:	83 ec 28             	sub    esp,0x28
  100f0d:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100f11:	74 06                	je     100f19 <strcat+0x12>
  100f13:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
  100f17:	75 24                	jne    100f3d <strcat+0x36>
  100f19:	c7 44 24 0c 37 17 10 	mov    DWORD PTR [esp+0xc],0x101737
  100f20:	00 
  100f21:	c7 44 24 08 96 17 10 	mov    DWORD PTR [esp+0x8],0x101796
  100f28:	00 
  100f29:	c7 44 24 04 5d 00 00 	mov    DWORD PTR [esp+0x4],0x5d
  100f30:	00 
  100f31:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100f38:	e8 b7 fb ff ff       	call   100af4 <panic_spin>
  100f3d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100f40:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  100f43:	90                   	nop
  100f44:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100f47:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100f4a:	84 c0                	test   al,al
  100f4c:	0f 95 c0             	setne  al
  100f4f:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100f53:	84 c0                	test   al,al
  100f55:	75 ed                	jne    100f44 <strcat+0x3d>
  100f57:	83 6d f4 01          	sub    DWORD PTR [ebp-0xc],0x1
  100f5b:	90                   	nop
  100f5c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100f5f:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100f62:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100f65:	88 10                	mov    BYTE PTR [eax],dl
  100f67:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100f6a:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100f6d:	84 c0                	test   al,al
  100f6f:	0f 95 c0             	setne  al
  100f72:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100f76:	83 45 0c 01          	add    DWORD PTR [ebp+0xc],0x1
  100f7a:	84 c0                	test   al,al
  100f7c:	75 de                	jne    100f5c <strcat+0x55>
  100f7e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100f81:	c9                   	leave  
  100f82:	c3                   	ret    

00100f83 <strchrs>:
  100f83:	55                   	push   ebp
  100f84:	89 e5                	mov    ebp,esp
  100f86:	83 ec 38             	sub    esp,0x38
  100f89:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100f8c:	88 45 e4             	mov    BYTE PTR [ebp-0x1c],al
  100f8f:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100f93:	75 24                	jne    100fb9 <strchrs+0x36>
  100f95:	c7 44 24 0c 6b 17 10 	mov    DWORD PTR [esp+0xc],0x10176b
  100f9c:	00 
  100f9d:	c7 44 24 08 8e 17 10 	mov    DWORD PTR [esp+0x8],0x10178e
  100fa4:	00 
  100fa5:	c7 44 24 04 67 00 00 	mov    DWORD PTR [esp+0x4],0x67
  100fac:	00 
  100fad:	c7 04 24 2e 17 10 00 	mov    DWORD PTR [esp],0x10172e
  100fb4:	e8 3b fb ff ff       	call   100af4 <panic_spin>
  100fb9:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
  100fc0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100fc3:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
  100fc6:	eb 19                	jmp    100fe1 <strchrs+0x5e>
  100fc8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  100fcb:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100fce:	0f be d0             	movsx  edx,al
  100fd1:	0f b6 45 e4          	movzx  eax,BYTE PTR [ebp-0x1c]
  100fd5:	39 c2                	cmp    edx,eax
  100fd7:	75 04                	jne    100fdd <strchrs+0x5a>
  100fd9:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100fdd:	83 45 f0 01          	add    DWORD PTR [ebp-0x10],0x1
  100fe1:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  100fe4:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100fe7:	84 c0                	test   al,al
  100fe9:	75 dd                	jne    100fc8 <strchrs+0x45>
  100feb:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100fee:	c9                   	leave  
  100fef:	c3                   	ret    

00100ff0 <bitmap_init>:
  100ff0:	55                   	push   ebp
  100ff1:	89 e5                	mov    ebp,esp
  100ff3:	83 ec 18             	sub    esp,0x18
  100ff6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100ff9:	8b 10                	mov    edx,DWORD PTR [eax]
  100ffb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100ffe:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
  101001:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
  101005:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  10100c:	00 
  10100d:	89 04 24             	mov    DWORD PTR [esp],eax
  101010:	e8 87 fb ff ff       	call   100b9c <memset>
  101015:	c9                   	leave  
  101016:	c3                   	ret    

00101017 <bitmap_scan_test>:
  101017:	55                   	push   ebp
  101018:	89 e5                	mov    ebp,esp
  10101a:	56                   	push   esi
  10101b:	53                   	push   ebx
  10101c:	83 ec 10             	sub    esp,0x10
  10101f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  101022:	c1 e8 03             	shr    eax,0x3
  101025:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  101028:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  10102b:	83 e0 07             	and    eax,0x7
  10102e:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
  101031:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  101034:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
  101037:	03 45 f4             	add    eax,DWORD PTR [ebp-0xc]
  10103a:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  10103d:	0f b6 d0             	movzx  edx,al
  101040:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  101043:	bb 01 00 00 00       	mov    ebx,0x1
  101048:	89 de                	mov    esi,ebx
  10104a:	89 c1                	mov    ecx,eax
  10104c:	d3 e6                	shl    esi,cl
  10104e:	89 f0                	mov    eax,esi
  101050:	21 d0                	and    eax,edx
  101052:	83 c4 10             	add    esp,0x10
  101055:	5b                   	pop    ebx
  101056:	5e                   	pop    esi
  101057:	5d                   	pop    ebp
  101058:	c3                   	ret    

00101059 <bitmap_scan>:
  101059:	55                   	push   ebp
  10105a:	89 e5                	mov    ebp,esp
  10105c:	53                   	push   ebx
  10105d:	83 ec 34             	sub    esp,0x34
  101060:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
  101067:	eb 04                	jmp    10106d <bitmap_scan+0x14>
  101069:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  10106d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  101070:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
  101073:	03 45 f4             	add    eax,DWORD PTR [ebp-0xc]
  101076:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  101079:	3c ff                	cmp    al,0xff
  10107b:	75 0a                	jne    101087 <bitmap_scan+0x2e>
  10107d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  101080:	8b 00                	mov    eax,DWORD PTR [eax]
  101082:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
  101085:	77 e2                	ja     101069 <bitmap_scan+0x10>
  101087:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10108a:	8b 00                	mov    eax,DWORD PTR [eax]
  10108c:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
  10108f:	77 24                	ja     1010b5 <bitmap_scan+0x5c>
  101091:	c7 44 24 0c d8 17 10 	mov    DWORD PTR [esp+0xc],0x1017d8
  101098:	00 
  101099:	c7 44 24 08 29 18 10 	mov    DWORD PTR [esp+0x8],0x101829
  1010a0:	00 
  1010a1:	c7 44 24 04 1d 00 00 	mov    DWORD PTR [esp+0x4],0x1d
  1010a8:	00 
  1010a9:	c7 04 24 f8 17 10 00 	mov    DWORD PTR [esp],0x1017f8
  1010b0:	e8 3f fa ff ff       	call   100af4 <panic_spin>
  1010b5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1010b8:	8b 00                	mov    eax,DWORD PTR [eax]
  1010ba:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
  1010bd:	75 0a                	jne    1010c9 <bitmap_scan+0x70>
  1010bf:	b8 ff ff ff ff       	mov    eax,0xffffffff
  1010c4:	e9 d7 00 00 00       	jmp    1011a0 <bitmap_scan+0x147>
  1010c9:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
  1010d0:	eb 04                	jmp    1010d6 <bitmap_scan+0x7d>
  1010d2:	83 45 f0 01          	add    DWORD PTR [ebp-0x10],0x1
  1010d6:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  1010d9:	ba 01 00 00 00       	mov    edx,0x1
  1010de:	89 d3                	mov    ebx,edx
  1010e0:	89 c1                	mov    ecx,eax
  1010e2:	d3 e3                	shl    ebx,cl
  1010e4:	89 d8                	mov    eax,ebx
  1010e6:	89 c2                	mov    edx,eax
  1010e8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1010eb:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
  1010ee:	03 45 f4             	add    eax,DWORD PTR [ebp-0xc]
  1010f1:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  1010f4:	21 d0                	and    eax,edx
  1010f6:	84 c0                	test   al,al
  1010f8:	75 d8                	jne    1010d2 <bitmap_scan+0x79>
  1010fa:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  1010fd:	8d 14 c5 00 00 00 00 	lea    edx,[eax*8+0x0]
  101104:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  101107:	01 d0                	add    eax,edx
  101109:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
  10110c:	83 7d 0c 01          	cmp    DWORD PTR [ebp+0xc],0x1
  101110:	75 08                	jne    10111a <bitmap_scan+0xc1>
  101112:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
  101115:	e9 86 00 00 00       	jmp    1011a0 <bitmap_scan+0x147>
  10111a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10111d:	8b 00                	mov    eax,DWORD PTR [eax]
  10111f:	8d 14 c5 00 00 00 00 	lea    edx,[eax*8+0x0]
  101126:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
  101129:	89 d1                	mov    ecx,edx
  10112b:	29 c1                	sub    ecx,eax
  10112d:	89 c8                	mov    eax,ecx
  10112f:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
  101132:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
  101135:	83 c0 01             	add    eax,0x1
  101138:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
  10113b:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [ebp-0x20],0x1
  101142:	c7 45 ec ff ff ff ff 	mov    DWORD PTR [ebp-0x14],0xffffffff
  101149:	eb 43                	jmp    10118e <bitmap_scan+0x135>
  10114b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
  10114e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  101152:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  101155:	89 04 24             	mov    DWORD PTR [esp],eax
  101158:	e8 ba fe ff ff       	call   101017 <bitmap_scan_test>
  10115d:	85 c0                	test   eax,eax
  10115f:	75 06                	jne    101167 <bitmap_scan+0x10e>
  101161:	83 45 e0 01          	add    DWORD PTR [ebp-0x20],0x1
  101165:	eb 07                	jmp    10116e <bitmap_scan+0x115>
  101167:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
  10116e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
  101171:	3b 45 0c             	cmp    eax,DWORD PTR [ebp+0xc]
  101174:	75 14                	jne    10118a <bitmap_scan+0x131>
  101176:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  101179:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
  10117c:	89 d3                	mov    ebx,edx
  10117e:	29 c3                	sub    ebx,eax
  101180:	89 d8                	mov    eax,ebx
  101182:	83 c0 01             	add    eax,0x1
  101185:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
  101188:	eb 13                	jmp    10119d <bitmap_scan+0x144>
  10118a:	83 45 e4 01          	add    DWORD PTR [ebp-0x1c],0x1
  10118e:	83 7d e8 00          	cmp    DWORD PTR [ebp-0x18],0x0
  101192:	0f 95 c0             	setne  al
  101195:	83 6d e8 01          	sub    DWORD PTR [ebp-0x18],0x1
  101199:	84 c0                	test   al,al
  10119b:	75 ae                	jne    10114b <bitmap_scan+0xf2>
  10119d:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
  1011a0:	83 c4 34             	add    esp,0x34
  1011a3:	5b                   	pop    ebx
  1011a4:	5d                   	pop    ebp
  1011a5:	c3                   	ret    

001011a6 <bitmap_set>:
  1011a6:	55                   	push   ebp
  1011a7:	89 e5                	mov    ebp,esp
  1011a9:	57                   	push   edi
  1011aa:	56                   	push   esi
  1011ab:	53                   	push   ebx
  1011ac:	83 ec 3c             	sub    esp,0x3c
  1011af:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  1011b2:	88 45 d4             	mov    BYTE PTR [ebp-0x2c],al
  1011b5:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
  1011b9:	74 2a                	je     1011e5 <bitmap_set+0x3f>
  1011bb:	80 7d d4 01          	cmp    BYTE PTR [ebp-0x2c],0x1
  1011bf:	74 24                	je     1011e5 <bitmap_set+0x3f>
  1011c1:	c7 44 24 0c 01 18 10 	mov    DWORD PTR [esp+0xc],0x101801
  1011c8:	00 
  1011c9:	c7 44 24 08 1e 18 10 	mov    DWORD PTR [esp+0x8],0x10181e
  1011d0:	00 
  1011d1:	c7 44 24 04 45 00 00 	mov    DWORD PTR [esp+0x4],0x45
  1011d8:	00 
  1011d9:	c7 04 24 f8 17 10 00 	mov    DWORD PTR [esp],0x1017f8
  1011e0:	e8 0f f9 ff ff       	call   100af4 <panic_spin>
  1011e5:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1011e8:	c1 e8 03             	shr    eax,0x3
  1011eb:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
  1011ee:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1011f1:	83 e0 07             	and    eax,0x7
  1011f4:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
  1011f7:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
  1011fb:	74 2d                	je     10122a <bitmap_set+0x84>
  1011fd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  101200:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
  101203:	03 45 e4             	add    eax,DWORD PTR [ebp-0x1c]
  101206:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  101209:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
  10120c:	03 55 e4             	add    edx,DWORD PTR [ebp-0x1c]
  10120f:	0f b6 12             	movzx  edx,BYTE PTR [edx]
  101212:	89 d3                	mov    ebx,edx
  101214:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
  101217:	be 01 00 00 00       	mov    esi,0x1
  10121c:	89 f7                	mov    edi,esi
  10121e:	89 d1                	mov    ecx,edx
  101220:	d3 e7                	shl    edi,cl
  101222:	89 fa                	mov    edx,edi
  101224:	09 da                	or     edx,ebx
  101226:	88 10                	mov    BYTE PTR [eax],dl
  101228:	eb 2d                	jmp    101257 <bitmap_set+0xb1>
  10122a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10122d:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
  101230:	03 45 e4             	add    eax,DWORD PTR [ebp-0x1c]
  101233:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  101236:	8b 52 04             	mov    edx,DWORD PTR [edx+0x4]
  101239:	03 55 e4             	add    edx,DWORD PTR [ebp-0x1c]
  10123c:	0f b6 12             	movzx  edx,BYTE PTR [edx]
  10123f:	89 d3                	mov    ebx,edx
  101241:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
  101244:	be 01 00 00 00       	mov    esi,0x1
  101249:	89 f7                	mov    edi,esi
  10124b:	89 d1                	mov    ecx,edx
  10124d:	d3 e7                	shl    edi,cl
  10124f:	89 fa                	mov    edx,edi
  101251:	f7 d2                	not    edx
  101253:	21 da                	and    edx,ebx
  101255:	88 10                	mov    BYTE PTR [eax],dl
  101257:	83 c4 3c             	add    esp,0x3c
  10125a:	5b                   	pop    ebx
  10125b:	5e                   	pop    esi
  10125c:	5f                   	pop    edi
  10125d:	5d                   	pop    ebp
  10125e:	c3                   	ret    
  10125f:	90                   	nop

00101260 <mem_pool_init>:
  101260:	55                   	push   ebp
  101261:	89 e5                	mov    ebp,esp
  101263:	83 ec 48             	sub    esp,0x48
  101266:	c7 04 24 38 18 10 00 	mov    DWORD PTR [esp],0x101838
  10126d:	e8 4f ee ff ff       	call   1000c1 <put_str>
  101272:	c7 45 f4 00 00 10 00 	mov    DWORD PTR [ebp-0xc],0x100000
  101279:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  10127c:	05 00 00 10 00       	add    eax,0x100000
  101281:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
  101284:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  101287:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  10128a:	89 d1                	mov    ecx,edx
  10128c:	29 c1                	sub    ecx,eax
  10128e:	89 c8                	mov    eax,ecx
  101290:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
  101293:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
  101296:	c1 e8 0c             	shr    eax,0xc
  101299:	66 89 45 ea          	mov    WORD PTR [ebp-0x16],ax
  10129d:	0f b7 45 ea          	movzx  eax,WORD PTR [ebp-0x16]
  1012a1:	66 d1 e8             	shr    ax,1
  1012a4:	66 89 45 e8          	mov    WORD PTR [ebp-0x18],ax
  1012a8:	0f b7 45 e8          	movzx  eax,WORD PTR [ebp-0x18]
  1012ac:	0f b7 55 ea          	movzx  edx,WORD PTR [ebp-0x16]
  1012b0:	89 d1                	mov    ecx,edx
  1012b2:	66 29 c1             	sub    cx,ax
  1012b5:	89 c8                	mov    eax,ecx
  1012b7:	66 89 45 e6          	mov    WORD PTR [ebp-0x1a],ax
  1012bb:	0f b7 45 e8          	movzx  eax,WORD PTR [ebp-0x18]
  1012bf:	66 c1 e8 03          	shr    ax,0x3
  1012c3:	0f b7 c0             	movzx  eax,ax
  1012c6:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
  1012c9:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
  1012cd:	66 c1 e8 03          	shr    ax,0x3
  1012d1:	0f b7 c0             	movzx  eax,ax
  1012d4:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
  1012d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  1012da:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
  1012dd:	0f b7 45 e8          	movzx  eax,WORD PTR [ebp-0x18]
  1012e1:	c1 e0 0c             	shl    eax,0xc
  1012e4:	03 45 d8             	add    eax,DWORD PTR [ebp-0x28]
  1012e7:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
  1012ea:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
  1012ed:	a3 48 27 10 00       	mov    ds:0x102748,eax
  1012f2:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
  1012f5:	a3 2c 27 10 00       	mov    ds:0x10272c,eax
  1012fa:	0f b7 45 e8          	movzx  eax,WORD PTR [ebp-0x18]
  1012fe:	c1 e0 0c             	shl    eax,0xc
  101301:	a3 4c 27 10 00       	mov    ds:0x10274c,eax
  101306:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
  10130a:	c1 e0 0c             	shl    eax,0xc
  10130d:	a3 30 27 10 00       	mov    ds:0x102730,eax
  101312:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
  101315:	a3 40 27 10 00       	mov    ds:0x102740,eax
  10131a:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
  10131d:	a3 24 27 10 00       	mov    ds:0x102724,eax
  101322:	c7 05 44 27 10 00 00 	mov    DWORD PTR ds:0x102744,0xc009a000
  101329:	a0 09 c0 
  10132c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
  10132f:	2d 00 60 f6 3f       	sub    eax,0x3ff66000
  101334:	a3 28 27 10 00       	mov    ds:0x102728,eax
  101339:	c7 04 24 50 18 10 00 	mov    DWORD PTR [esp],0x101850
  101340:	e8 7c ed ff ff       	call   1000c1 <put_str>
  101345:	a1 44 27 10 00       	mov    eax,ds:0x102744
  10134a:	89 04 24             	mov    DWORD PTR [esp],eax
  10134d:	e8 ee ec ff ff       	call   100040 <put_int>
  101352:	c7 04 24 70 18 10 00 	mov    DWORD PTR [esp],0x101870
  101359:	e8 63 ed ff ff       	call   1000c1 <put_str>
  10135e:	a1 48 27 10 00       	mov    eax,ds:0x102748
  101363:	89 04 24             	mov    DWORD PTR [esp],eax
  101366:	e8 d5 ec ff ff       	call   100040 <put_int>
  10136b:	c7 04 24 8d 18 10 00 	mov    DWORD PTR [esp],0x10188d
  101372:	e8 4a ed ff ff       	call   1000c1 <put_str>
  101377:	c7 04 24 8f 18 10 00 	mov    DWORD PTR [esp],0x10188f
  10137e:	e8 3e ed ff ff       	call   1000c1 <put_str>
  101383:	a1 28 27 10 00       	mov    eax,ds:0x102728
  101388:	89 04 24             	mov    DWORD PTR [esp],eax
  10138b:	e8 b0 ec ff ff       	call   100040 <put_int>
  101390:	c7 04 24 ad 18 10 00 	mov    DWORD PTR [esp],0x1018ad
  101397:	e8 25 ed ff ff       	call   1000c1 <put_str>
  10139c:	a1 2c 27 10 00       	mov    eax,ds:0x10272c
  1013a1:	89 04 24             	mov    DWORD PTR [esp],eax
  1013a4:	e8 97 ec ff ff       	call   100040 <put_int>
  1013a9:	c7 04 24 8d 18 10 00 	mov    DWORD PTR [esp],0x10188d
  1013b0:	e8 0c ed ff ff       	call   1000c1 <put_str>
  1013b5:	c7 04 24 40 27 10 00 	mov    DWORD PTR [esp],0x102740
  1013bc:	e8 2f fc ff ff       	call   100ff0 <bitmap_init>
  1013c1:	c7 04 24 24 27 10 00 	mov    DWORD PTR [esp],0x102724
  1013c8:	e8 23 fc ff ff       	call   100ff0 <bitmap_init>
  1013cd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
  1013d0:	a3 34 27 10 00       	mov    ds:0x102734,eax
  1013d5:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
  1013d8:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
  1013db:	01 d0                	add    eax,edx
  1013dd:	2d 00 60 f6 3f       	sub    eax,0x3ff66000
  1013e2:	a3 38 27 10 00       	mov    ds:0x102738,eax
  1013e7:	c7 05 3c 27 10 00 00 	mov    DWORD PTR ds:0x10273c,0xc0100000
  1013ee:	00 10 c0 
  1013f1:	c7 04 24 34 27 10 00 	mov    DWORD PTR [esp],0x102734
  1013f8:	e8 f3 fb ff ff       	call   100ff0 <bitmap_init>
  1013fd:	c7 04 24 c8 18 10 00 	mov    DWORD PTR [esp],0x1018c8
  101404:	e8 b8 ec ff ff       	call   1000c1 <put_str>
  101409:	c9                   	leave  
  10140a:	c3                   	ret    

0010140b <mem_init>:
  10140b:	55                   	push   ebp
  10140c:	89 e5                	mov    ebp,esp
  10140e:	83 ec 28             	sub    esp,0x28
  101411:	c7 04 24 df 18 10 00 	mov    DWORD PTR [esp],0x1018df
  101418:	e8 a4 ec ff ff       	call   1000c1 <put_str>
  10141d:	b8 00 0b 00 00       	mov    eax,0xb00
  101422:	8b 00                	mov    eax,DWORD PTR [eax]
  101424:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
  101427:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  10142a:	89 04 24             	mov    DWORD PTR [esp],eax
  10142d:	e8 2e fe ff ff       	call   101260 <mem_pool_init>
  101432:	c7 04 24 ef 18 10 00 	mov    DWORD PTR [esp],0x1018ef
  101439:	e8 83 ec ff ff       	call   1000c1 <put_str>
  10143e:	c9                   	leave  
  10143f:	c3                   	ret    

Disassembly of section .rodata:

00101440 <__func__.901-0x34e>:
  101440:	49                   	dec    ecx
  101441:	20 61 6d             	and    BYTE PTR [ecx+0x6d],ah
  101444:	20 6b 65             	and    BYTE PTR [ebx+0x65],ch
  101447:	72 6e                	jb     1014b7 <mem_init+0xac>
  101449:	65 6c                	gs ins BYTE PTR es:[edi],dx
  10144b:	21 0a                	and    DWORD PTR [edx],ecx
  10144d:	00 00                	add    BYTE PTR [eax],al
  10144f:	00 20                	add    BYTE PTR [eax],ah
  101451:	20 20                	and    BYTE PTR [eax],ah
  101453:	70 69                	jo     1014be <mem_init+0xb3>
  101455:	63 5f 69             	arpl   WORD PTR [edi+0x69],bx
  101458:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101459:	69 74 20 64 6f 6e 65 	imul   esi,DWORD PTR [eax+eiz*1+0x64],0xa656e6f
  101460:	0a 
  101461:	00 20                	add    BYTE PTR [eax],ah
  101463:	20 20                	and    BYTE PTR [eax],ah
  101465:	69 64 74 5f 64 65 73 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x63736564
  10146c:	63 
  10146d:	5f                   	pop    edi
  10146e:	69 6e 69 74 20 64 6f 	imul   ebp,DWORD PTR [esi+0x69],0x6f642074
  101475:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101476:	65 0a 00             	or     al,BYTE PTR gs:[eax]
  101479:	69 6e 74 20 76 65 63 	imul   ebp,DWORD PTR [esi+0x74],0x63657620
  101480:	74 6f                	je     1014f1 <mem_init+0xe6>
  101482:	72 3a                	jb     1014be <mem_init+0xb3>
  101484:	20 30                	and    BYTE PTR [eax],dh
  101486:	78 00                	js     101488 <mem_init+0x7d>
  101488:	75 6e                	jne    1014f8 <mem_init+0xed>
  10148a:	6b 6e 6f 77          	imul   ebp,DWORD PTR [esi+0x6f],0x77
  10148e:	6e                   	outs   dx,BYTE PTR ds:[esi]
  10148f:	00 23                	add    BYTE PTR [ebx],ah
  101491:	44                   	inc    esp
  101492:	45                   	inc    ebp
  101493:	20 44 69 76          	and    BYTE PTR [ecx+ebp*2+0x76],al
  101497:	69 64 65 20 45 72 72 	imul   esp,DWORD PTR [ebp+eiz*2+0x20],0x6f727245
  10149e:	6f 
  10149f:	72 00                	jb     1014a1 <mem_init+0x96>
  1014a1:	23 44 42 20          	and    eax,DWORD PTR [edx+eax*2+0x20]
  1014a5:	44                   	inc    esp
  1014a6:	65 62 75 67          	bound  esi,QWORD PTR gs:[ebp+0x67]
  1014aa:	20 45 78             	and    BYTE PTR [ebp+0x78],al
  1014ad:	63 65 70             	arpl   WORD PTR [ebp+0x70],sp
  1014b0:	74 69                	je     10151b <mem_init+0x110>
  1014b2:	6f                   	outs   dx,DWORD PTR ds:[esi]
  1014b3:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1014b4:	00 4e 4d             	add    BYTE PTR [esi+0x4d],cl
  1014b7:	49                   	dec    ecx
  1014b8:	20 49 6e             	and    BYTE PTR [ecx+0x6e],cl
  1014bb:	74 65                	je     101522 <mem_init+0x117>
  1014bd:	72 72                	jb     101531 <mem_init+0x126>
  1014bf:	75 70                	jne    101531 <mem_init+0x126>
  1014c1:	74 00                	je     1014c3 <mem_init+0xb8>
  1014c3:	23 42 50             	and    eax,DWORD PTR [edx+0x50]
  1014c6:	20 42 72             	and    BYTE PTR [edx+0x72],al
  1014c9:	65 61                	gs popa 
  1014cb:	6b 70 6f 69          	imul   esi,DWORD PTR [eax+0x6f],0x69
  1014cf:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1014d0:	74 20                	je     1014f2 <mem_init+0xe7>
  1014d2:	45                   	inc    ebp
  1014d3:	78 63                	js     101538 <mem_init+0x12d>
  1014d5:	65 70 74             	gs jo  10154c <mem_init+0x141>
  1014d8:	69 6f 6e 00 23 4f 46 	imul   ebp,DWORD PTR [edi+0x6e],0x464f2300
  1014df:	20 4f 76             	and    BYTE PTR [edi+0x76],cl
  1014e2:	65 72 66             	gs jb  10154b <mem_init+0x140>
  1014e5:	6c                   	ins    BYTE PTR es:[edi],dx
  1014e6:	6f                   	outs   dx,DWORD PTR ds:[esi]
  1014e7:	77 20                	ja     101509 <mem_init+0xfe>
  1014e9:	45                   	inc    ebp
  1014ea:	78 63                	js     10154f <mem_init+0x144>
  1014ec:	65 70 74             	gs jo  101563 <mem_init+0x158>
  1014ef:	69 6f 6e 00 00 23 42 	imul   ebp,DWORD PTR [edi+0x6e],0x42230000
  1014f6:	52                   	push   edx
  1014f7:	20 42 4f             	and    BYTE PTR [edx+0x4f],al
  1014fa:	55                   	push   ebp
  1014fb:	4e                   	dec    esi
  1014fc:	44                   	inc    esp
  1014fd:	20 52 61             	and    BYTE PTR [edx+0x61],dl
  101500:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101501:	67 65 20 45 78       	and    BYTE PTR gs:[di+0x78],al
  101506:	63 65 65             	arpl   WORD PTR [ebp+0x65],sp
  101509:	64 65 64 20 45 78    	fs gs and BYTE PTR fs:[ebp+0x78],al
  10150f:	63 65 70             	arpl   WORD PTR [ebp+0x70],sp
  101512:	74 69                	je     10157d <mem_init+0x172>
  101514:	6f                   	outs   dx,DWORD PTR ds:[esi]
  101515:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101516:	00 23                	add    BYTE PTR [ebx],ah
  101518:	55                   	push   ebp
  101519:	44                   	inc    esp
  10151a:	20 49 6e             	and    BYTE PTR [ecx+0x6e],cl
  10151d:	76 61                	jbe    101580 <mem_init+0x175>
  10151f:	6c                   	ins    BYTE PTR es:[edi],dx
  101520:	69 64 20 4f 70 63 6f 	imul   esp,DWORD PTR [eax+eiz*1+0x4f],0x646f6370
  101527:	64 
  101528:	65 20 45 78          	and    BYTE PTR gs:[ebp+0x78],al
  10152c:	63 65 70             	arpl   WORD PTR [ebp+0x70],sp
  10152f:	74 69                	je     10159a <mem_init+0x18f>
  101531:	6f                   	outs   dx,DWORD PTR ds:[esi]
  101532:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101533:	00 23                	add    BYTE PTR [ebx],ah
  101535:	4e                   	dec    esi
  101536:	4d                   	dec    ebp
  101537:	20 44 65 76          	and    BYTE PTR [ebp+eiz*2+0x76],al
  10153b:	69 63 65 20 4e 6f 74 	imul   esp,DWORD PTR [ebx+0x65],0x746f4e20
  101542:	20 41 76             	and    BYTE PTR [ecx+0x76],al
  101545:	61                   	popa   
  101546:	69 6c 61 62 6c 65 20 	imul   ebp,DWORD PTR [ecx+eiz*2+0x62],0x4520656c
  10154d:	45 
  10154e:	78 63                	js     1015b3 <mem_init+0x1a8>
  101550:	65 70 74             	gs jo  1015c7 <mem_init+0x1bc>
  101553:	69 6f 6e 00 23 44 46 	imul   ebp,DWORD PTR [edi+0x6e],0x46442300
  10155a:	20 44 6f 75          	and    BYTE PTR [edi+ebp*2+0x75],al
  10155e:	62 6c 65 20          	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
  101562:	46                   	inc    esi
  101563:	61                   	popa   
  101564:	75 6c                	jne    1015d2 <mem_init+0x1c7>
  101566:	74 20                	je     101588 <mem_init+0x17d>
  101568:	45                   	inc    ebp
  101569:	78 63                	js     1015ce <mem_init+0x1c3>
  10156b:	65 70 74             	gs jo  1015e2 <mem_init+0x1d7>
  10156e:	69 6f 6e 00 43 6f 70 	imul   ebp,DWORD PTR [edi+0x6e],0x706f4300
  101575:	72 6f                	jb     1015e6 <mem_init+0x1db>
  101577:	63 65 73             	arpl   WORD PTR [ebp+0x73],sp
  10157a:	73 6f                	jae    1015eb <mem_init+0x1e0>
  10157c:	72 20                	jb     10159e <mem_init+0x193>
  10157e:	53                   	push   ebx
  10157f:	65 67 6d             	gs ins DWORD PTR es:[di],dx
  101582:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  101584:	74 20                	je     1015a6 <mem_init+0x19b>
  101586:	4f                   	dec    edi
  101587:	76 65                	jbe    1015ee <mem_init+0x1e3>
  101589:	72 72                	jb     1015fd <mem_init+0x1f2>
  10158b:	75 6e                	jne    1015fb <mem_init+0x1f0>
  10158d:	00 23                	add    BYTE PTR [ebx],ah
  10158f:	54                   	push   esp
  101590:	53                   	push   ebx
  101591:	20 49 6e             	and    BYTE PTR [ecx+0x6e],cl
  101594:	76 61                	jbe    1015f7 <mem_init+0x1ec>
  101596:	6c                   	ins    BYTE PTR es:[edi],dx
  101597:	69 64 20 54 53 53 20 	imul   esp,DWORD PTR [eax+eiz*1+0x54],0x45205353
  10159e:	45 
  10159f:	78 63                	js     101604 <mem_init+0x1f9>
  1015a1:	65 70 74             	gs jo  101618 <mem_init+0x20d>
  1015a4:	69 6f 6e 00 23 4e 50 	imul   ebp,DWORD PTR [edi+0x6e],0x504e2300
  1015ab:	20 53 65             	and    BYTE PTR [ebx+0x65],dl
  1015ae:	67 6d                	ins    DWORD PTR es:[di],dx
  1015b0:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  1015b2:	74 20                	je     1015d4 <mem_init+0x1c9>
  1015b4:	4e                   	dec    esi
  1015b5:	6f                   	outs   dx,DWORD PTR ds:[esi]
  1015b6:	74 20                	je     1015d8 <mem_init+0x1cd>
  1015b8:	50                   	push   eax
  1015b9:	72 65                	jb     101620 <mem_init+0x215>
  1015bb:	73 65                	jae    101622 <mem_init+0x217>
  1015bd:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1015be:	74 00                	je     1015c0 <mem_init+0x1b5>
  1015c0:	23 53 53             	and    edx,DWORD PTR [ebx+0x53]
  1015c3:	20 53 74             	and    BYTE PTR [ebx+0x74],dl
  1015c6:	61                   	popa   
  1015c7:	63 6b 20             	arpl   WORD PTR [ebx+0x20],bp
  1015ca:	46                   	inc    esi
  1015cb:	61                   	popa   
  1015cc:	75 6c                	jne    10163a <mem_init+0x22f>
  1015ce:	74 20                	je     1015f0 <mem_init+0x1e5>
  1015d0:	45                   	inc    ebp
  1015d1:	78 63                	js     101636 <mem_init+0x22b>
  1015d3:	65 70 74             	gs jo  10164a <mem_init+0x23f>
  1015d6:	69 6f 6e 00 00 00 23 	imul   ebp,DWORD PTR [edi+0x6e],0x23000000
  1015dd:	47                   	inc    edi
  1015de:	50                   	push   eax
  1015df:	20 47 65             	and    BYTE PTR [edi+0x65],al
  1015e2:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1015e3:	65 72 61             	gs jb  101647 <mem_init+0x23c>
  1015e6:	6c                   	ins    BYTE PTR es:[edi],dx
  1015e7:	20 50 72             	and    BYTE PTR [eax+0x72],dl
  1015ea:	6f                   	outs   dx,DWORD PTR ds:[esi]
  1015eb:	74 65                	je     101652 <mem_init+0x247>
  1015ed:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  1015f1:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1015f2:	20 45 78             	and    BYTE PTR [ebp+0x78],al
  1015f5:	63 65 70             	arpl   WORD PTR [ebp+0x70],sp
  1015f8:	74 69                	je     101663 <mem_init+0x258>
  1015fa:	6f                   	outs   dx,DWORD PTR ds:[esi]
  1015fb:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1015fc:	00 23                	add    BYTE PTR [ebx],ah
  1015fe:	50                   	push   eax
  1015ff:	46                   	inc    esi
  101600:	20 50 61             	and    BYTE PTR [eax+0x61],dl
  101603:	67 65 2d 46 61 75 6c 	addr16 gs sub eax,0x6c756146
  10160a:	74 20                	je     10162c <mem_init+0x221>
  10160c:	45                   	inc    ebp
  10160d:	78 63                	js     101672 <mem_init+0x267>
  10160f:	65 70 74             	gs jo  101686 <mem_init+0x27b>
  101612:	69 6f 6e 00 00 00 23 	imul   ebp,DWORD PTR [edi+0x6e],0x23000000
  101619:	4d                   	dec    ebp
  10161a:	46                   	inc    esi
  10161b:	20 78 38             	and    BYTE PTR [eax+0x38],bh
  10161e:	37                   	aaa    
  10161f:	20 46 50             	and    BYTE PTR [esi+0x50],al
  101622:	55                   	push   ebp
  101623:	20 46 6c             	and    BYTE PTR [esi+0x6c],al
  101626:	6f                   	outs   dx,DWORD PTR ds:[esi]
  101627:	61                   	popa   
  101628:	74 69                	je     101693 <mem_init+0x288>
  10162a:	6e                   	outs   dx,BYTE PTR ds:[esi]
  10162b:	67 2d 50 6f 69 6e    	addr16 sub eax,0x6e696f50
  101631:	74 20                	je     101653 <mem_init+0x248>
  101633:	45                   	inc    ebp
  101634:	72 72                	jb     1016a8 <mem_init+0x29d>
  101636:	6f                   	outs   dx,DWORD PTR ds:[esi]
  101637:	72 00                	jb     101639 <mem_init+0x22e>
  101639:	23 41 43             	and    eax,DWORD PTR [ecx+0x43]
  10163c:	20 41 6c             	and    BYTE PTR [ecx+0x6c],al
  10163f:	69 67 6e 6d 65 6e 74 	imul   esp,DWORD PTR [edi+0x6e],0x746e656d
  101646:	20 43 68             	and    BYTE PTR [ebx+0x68],al
  101649:	65 63 6b 20          	arpl   WORD PTR gs:[ebx+0x20],bp
  10164d:	45                   	inc    ebp
  10164e:	78 63                	js     1016b3 <mem_init+0x2a8>
  101650:	65 70 74             	gs jo  1016c7 <mem_init+0x2bc>
  101653:	69 6f 6e 00 23 4d 43 	imul   ebp,DWORD PTR [edi+0x6e],0x434d2300
  10165a:	20 4d 61             	and    BYTE PTR [ebp+0x61],cl
  10165d:	63 68 69             	arpl   WORD PTR [eax+0x69],bp
  101660:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101661:	65 2d 43 68 65 63    	gs sub eax,0x63656843
  101667:	6b 20 45             	imul   esp,DWORD PTR [eax],0x45
  10166a:	78 63                	js     1016cf <mem_init+0x2c4>
  10166c:	65 70 74             	gs jo  1016e3 <mem_init+0x2d8>
  10166f:	69 6f 6e 00 00 23 58 	imul   ebp,DWORD PTR [edi+0x6e],0x58230000
  101676:	46                   	inc    esi
  101677:	20 53 49             	and    BYTE PTR [ebx+0x49],dl
  10167a:	4d                   	dec    ebp
  10167b:	44                   	inc    esp
  10167c:	20 46 6c             	and    BYTE PTR [esi+0x6c],al
  10167f:	6f                   	outs   dx,DWORD PTR ds:[esi]
  101680:	61                   	popa   
  101681:	74 69                	je     1016ec <mem_init+0x2e1>
  101683:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101684:	67 2d 50 6f 69 6e    	addr16 sub eax,0x6e696f50
  10168a:	74 20                	je     1016ac <mem_init+0x2a1>
  10168c:	45                   	inc    ebp
  10168d:	78 63                	js     1016f2 <mem_init+0x2e7>
  10168f:	65 70 74             	gs jo  101706 <mem_init+0x2fb>
  101692:	69 6f 6e 00 69 64 74 	imul   ebp,DWORD PTR [edi+0x6e],0x74646900
  101699:	5f                   	pop    edi
  10169a:	69 6e 69 74 20 73 74 	imul   ebp,DWORD PTR [esi+0x69],0x74732074
  1016a1:	61                   	popa   
  1016a2:	72 74                	jb     101718 <mem_init+0x30d>
  1016a4:	0a 00                	or     al,BYTE PTR [eax]
  1016a6:	69 64 74 5f 69 6e 69 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x74696e69
  1016ad:	74 
  1016ae:	20 64 6f 6e          	and    BYTE PTR [edi+ebp*2+0x6e],ah
  1016b2:	65 0a 00             	or     al,BYTE PTR gs:[eax]
  1016b5:	69 6e 69 74 5f 61 6c 	imul   ebp,DWORD PTR [esi+0x69],0x6c615f74
  1016bc:	6c                   	ins    BYTE PTR es:[edi],dx
  1016bd:	0a 00                	or     al,BYTE PTR [eax]
  1016bf:	74 69                	je     10172a <mem_init+0x31f>
  1016c1:	6d                   	ins    DWORD PTR es:[edi],dx
  1016c2:	65 72 5f             	gs jb  101724 <mem_init+0x319>
  1016c5:	69 6e 69 74 20 73 74 	imul   ebp,DWORD PTR [esi+0x69],0x74732074
  1016cc:	61                   	popa   
  1016cd:	72 74                	jb     101743 <mem_init+0x338>
  1016cf:	0a 00                	or     al,BYTE PTR [eax]
  1016d1:	74 69                	je     10173c <mem_init+0x331>
  1016d3:	6d                   	ins    DWORD PTR es:[edi],dx
  1016d4:	65 72 5f             	gs jb  101736 <mem_init+0x32b>
  1016d7:	69 6e 69 74 20 64 6f 	imul   ebp,DWORD PTR [esi+0x69],0x6f642074
  1016de:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1016df:	65 0a 00             	or     al,BYTE PTR gs:[eax]
  1016e2:	0a 0a                	or     cl,BYTE PTR [edx]
  1016e4:	0a 21                	or     ah,BYTE PTR [ecx]
  1016e6:	21 21                	and    DWORD PTR [ecx],esp
  1016e8:	21 21                	and    DWORD PTR [ecx],esp
  1016ea:	20 65 72             	and    BYTE PTR [ebp+0x72],ah
  1016ed:	72 6f                	jb     10175e <mem_init+0x353>
  1016ef:	72 20                	jb     101711 <mem_init+0x306>
  1016f1:	21 21                	and    DWORD PTR [ecx],esp
  1016f3:	21 21                	and    DWORD PTR [ecx],esp
  1016f5:	21 0a                	and    DWORD PTR [edx],ecx
  1016f7:	00 66 69             	add    BYTE PTR [esi+0x69],ah
  1016fa:	6c                   	ins    BYTE PTR es:[edi],dx
  1016fb:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  1016fd:	61                   	popa   
  1016fe:	6d                   	ins    DWORD PTR es:[edi],dx
  1016ff:	65 3a 00             	cmp    al,BYTE PTR gs:[eax]
  101702:	0a 00                	or     al,BYTE PTR [eax]
  101704:	6c                   	ins    BYTE PTR es:[edi],dx
  101705:	69 6e 65 3a 30 78 00 	imul   ebp,DWORD PTR [esi+0x65],0x78303a
  10170c:	66 75 6e             	data16 jne 10177d <mem_init+0x372>
  10170f:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  101713:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101714:	3a 00                	cmp    al,BYTE PTR [eax]
  101716:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
  101719:	64 69 74 69 6f 6e 3a 	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x64003a6e
  101720:	00 64 
  101722:	73 74                	jae    101798 <__func__.889+0x2>
  101724:	5f                   	pop    edi
  101725:	20 21                	and    BYTE PTR [ecx],ah
  101727:	3d 20 4e 55 4c       	cmp    eax,0x4c554e20
  10172c:	4c                   	dec    esp
  10172d:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
  101730:	72 69                	jb     10179b <__func__.889+0x5>
  101732:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101733:	67 2e 63 00          	arpl   WORD PTR cs:[bx+si],ax
  101737:	64 73 74             	fs jae 1017ae <__func__.864+0x2>
  10173a:	5f                   	pop    edi
  10173b:	20 21                	and    BYTE PTR [ecx],ah
  10173d:	3d 20 4e 55 4c       	cmp    eax,0x4c554e20
  101742:	4c                   	dec    esp
  101743:	20 26                	and    BYTE PTR [esi],ah
  101745:	26 20 73 72          	and    BYTE PTR es:[ebx+0x72],dh
  101749:	63 5f 20             	arpl   WORD PTR [edi+0x20],bx
  10174c:	21 3d 20 4e 55 4c    	and    DWORD PTR ds:0x4c554e20,edi
  101752:	4c                   	dec    esp
  101753:	00 61 20             	add    BYTE PTR [ecx+0x20],ah
  101756:	21 3d 20 4e 55 4c    	and    DWORD PTR ds:0x4c554e20,edi
  10175c:	4c                   	dec    esp
  10175d:	20 7c 7c 20          	and    BYTE PTR [esp+edi*2+0x20],bh
  101761:	62 20                	bound  esp,QWORD PTR [eax]
  101763:	21 3d 20 4e 55 4c    	and    DWORD PTR ds:0x4c554e20,edi
  101769:	4c                   	dec    esp
  10176a:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
  10176d:	72 20                	jb     10178f <__func__.901+0x1>
  10176f:	21 3d 20 4e 55 4c    	and    DWORD PTR ds:0x4c554e20,edi
  101775:	4c                   	dec    esp
  101776:	00 61 20             	add    BYTE PTR [ecx+0x20],ah
  101779:	21 3d 20 4e 55 4c    	and    DWORD PTR ds:0x4c554e20,edi
  10177f:	4c                   	dec    esp
  101780:	20 26                	and    BYTE PTR [esi],ah
  101782:	26 20 62 20          	and    BYTE PTR es:[edx+0x20],ah
  101786:	21 3d 20 4e 55 4c    	and    DWORD PTR ds:0x4c554e20,edi
  10178c:	4c                   	dec    esp
	...

0010178e <__func__.901>:
  10178e:	73 74                	jae    101804 <__func__.816+0x35>
  101790:	72 63                	jb     1017f5 <__func__.816+0x26>
  101792:	68 72 73 00 73       	push   0x73007372

00101796 <__func__.889>:
  101796:	73 74                	jae    10180c <__func__.816+0x3d>
  101798:	72 63                	jb     1017fd <__func__.816+0x2e>
  10179a:	61                   	popa   
  10179b:	74 00                	je     10179d <__func__.880>

0010179d <__func__.880>:
  10179d:	73 74                	jae    101813 <__func__.816+0x44>
  10179f:	72 72                	jb     101813 <__func__.816+0x44>
  1017a1:	63 68 72             	arpl   WORD PTR [eax+0x72],bp
	...

001017a5 <__func__.872>:
  1017a5:	73 74                	jae    10181b <__func__.816+0x4c>
  1017a7:	72 63                	jb     10180c <__func__.816+0x3d>
  1017a9:	68 72 00 73 74       	push   0x74730072

001017ac <__func__.864>:
  1017ac:	73 74                	jae    101822 <__func__.880+0x4>
  1017ae:	72 63                	jb     101813 <__func__.816+0x44>
  1017b0:	6d                   	ins    DWORD PTR es:[edi],dx
  1017b1:	70 00                	jo     1017b3 <__func__.855>

001017b3 <__func__.855>:
  1017b3:	73 74                	jae    101829 <__func__.863>
  1017b5:	72 6c                	jb     101823 <__func__.880+0x5>
  1017b7:	65 6e                	outs   dx,BYTE PTR gs:[esi]
	...

001017ba <__func__.847>:
  1017ba:	73 74                	jae    101830 <__func__.863+0x7>
  1017bc:	72 63                	jb     101821 <__func__.880+0x3>
  1017be:	70 79                	jo     101839 <__func__.863+0x10>
	...

001017c1 <__func__.839>:
  1017c1:	6d                   	ins    DWORD PTR es:[edi],dx
  1017c2:	65 6d                	gs ins DWORD PTR es:[edi],dx
  1017c4:	63 6d 70             	arpl   WORD PTR [ebp+0x70],bp
	...

001017c8 <__func__.826>:
  1017c8:	6d                   	ins    DWORD PTR es:[edi],dx
  1017c9:	65 6d                	gs ins DWORD PTR es:[edi],dx
  1017cb:	63 70 79             	arpl   WORD PTR [eax+0x79],si
	...

001017cf <__func__.816>:
  1017cf:	6d                   	ins    DWORD PTR es:[edi],dx
  1017d0:	65 6d                	gs ins DWORD PTR es:[edi],dx
  1017d2:	73 65                	jae    101839 <__func__.863+0x10>
  1017d4:	74 00                	je     1017d6 <__func__.816+0x7>
  1017d6:	00 00                	add    BYTE PTR [eax],al
  1017d8:	69 64 78 5f 62 79 74 	imul   esp,DWORD PTR [eax+edi*2+0x5f],0x65747962
  1017df:	65 
  1017e0:	20 3c 20             	and    BYTE PTR [eax+eiz*1],bh
  1017e3:	62 74 6d 70          	bound  esi,QWORD PTR [ebp+ebp*2+0x70]
  1017e7:	2d 3e 62 74 6d       	sub    eax,0x6d74623e
  1017ec:	70 5f                	jo     10184d <__func__.863+0x24>
  1017ee:	62 79 74             	bound  edi,QWORD PTR [ecx+0x74]
  1017f1:	65 73 5f             	gs jae 101853 <__func__.863+0x2a>
  1017f4:	6c                   	ins    BYTE PTR es:[edi],dx
  1017f5:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  1017f7:	00 62 69             	add    BYTE PTR [edx+0x69],ah
  1017fa:	74 6d                	je     101869 <__func__.863+0x40>
  1017fc:	61                   	popa   
  1017fd:	70 2e                	jo     10182d <__func__.863+0x4>
  1017ff:	63 00                	arpl   WORD PTR [eax],ax
  101801:	28 76 61             	sub    BYTE PTR [esi+0x61],dh
  101804:	6c                   	ins    BYTE PTR es:[edi],dx
  101805:	75 65                	jne    10186c <__func__.863+0x43>
  101807:	20 3d 3d 20 30 29    	and    BYTE PTR ds:0x2930203d,bh
  10180d:	20 7c 7c 20          	and    BYTE PTR [esp+edi*2+0x20],bh
  101811:	28 76 61             	sub    BYTE PTR [esi+0x61],dh
  101814:	6c                   	ins    BYTE PTR es:[edi],dx
  101815:	75 65                	jne    10187c <__func__.863+0x53>
  101817:	20 3d 3d 20 31 29    	and    BYTE PTR ds:0x2931203d,bh
	...

0010181e <__func__.880>:
  10181e:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  101821:	6d                   	ins    DWORD PTR es:[edi],dx
  101822:	61                   	popa   
  101823:	70 5f                	jo     101884 <__func__.863+0x5b>
  101825:	73 65                	jae    10188c <__func__.863+0x63>
  101827:	74 00                	je     101829 <__func__.863>

00101829 <__func__.863>:
  101829:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  10182c:	6d                   	ins    DWORD PTR es:[edi],dx
  10182d:	61                   	popa   
  10182e:	70 5f                	jo     10188f <__func__.863+0x66>
  101830:	73 63                	jae    101895 <__func__.863+0x6c>
  101832:	61                   	popa   
  101833:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101834:	00 00                	add    BYTE PTR [eax],al
  101836:	00 00                	add    BYTE PTR [eax],al
  101838:	20 20                	and    BYTE PTR [eax],ah
  10183a:	20 6d 65             	and    BYTE PTR [ebp+0x65],ch
  10183d:	6d                   	ins    DWORD PTR es:[edi],dx
  10183e:	5f                   	pop    edi
  10183f:	70 6f                	jo     1018b0 <__func__.863+0x87>
  101841:	6f                   	outs   dx,DWORD PTR ds:[esi]
  101842:	6c                   	ins    BYTE PTR es:[edi],dx
  101843:	5f                   	pop    edi
  101844:	69 6e 69 74 20 73 74 	imul   ebp,DWORD PTR [esi+0x69],0x74732074
  10184b:	61                   	popa   
  10184c:	72 74                	jb     1018c2 <__func__.863+0x99>
  10184e:	0a 00                	or     al,BYTE PTR [eax]
  101850:	20 20                	and    BYTE PTR [eax],ah
  101852:	20 20                	and    BYTE PTR [eax],ah
  101854:	20 20                	and    BYTE PTR [eax],ah
  101856:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
  10185a:	65 6c                	gs ins BYTE PTR es:[edi],dx
  10185c:	5f                   	pop    edi
  10185d:	70 6f                	jo     1018ce <__func__.863+0xa5>
  10185f:	6f                   	outs   dx,DWORD PTR ds:[esi]
  101860:	6c                   	ins    BYTE PTR es:[edi],dx
  101861:	5f                   	pop    edi
  101862:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  101865:	6d                   	ins    DWORD PTR es:[edi],dx
  101866:	61                   	popa   
  101867:	70 5f                	jo     1018c8 <__func__.863+0x9f>
  101869:	73 74                	jae    1018df <__func__.863+0xb6>
  10186b:	61                   	popa   
  10186c:	72 74                	jb     1018e2 <__func__.863+0xb9>
  10186e:	3a 00                	cmp    al,BYTE PTR [eax]
  101870:	20 6b 65             	and    BYTE PTR [ebx+0x65],ch
  101873:	72 6e                	jb     1018e3 <__func__.863+0xba>
  101875:	65 6c                	gs ins BYTE PTR es:[edi],dx
  101877:	5f                   	pop    edi
  101878:	70 6f                	jo     1018e9 <__func__.863+0xc0>
  10187a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  10187b:	6c                   	ins    BYTE PTR es:[edi],dx
  10187c:	5f                   	pop    edi
  10187d:	70 68                	jo     1018e7 <__func__.863+0xbe>
  10187f:	79 5f                	jns    1018e0 <__func__.863+0xb7>
  101881:	61                   	popa   
  101882:	64 64 72 5f          	fs fs jb 1018e5 <__func__.863+0xbc>
  101886:	73 74                	jae    1018fc <__func__.863+0xd3>
  101888:	61                   	popa   
  101889:	72 74                	jb     1018ff <__func__.863+0xd6>
  10188b:	3a 00                	cmp    al,BYTE PTR [eax]
  10188d:	0a 00                	or     al,BYTE PTR [eax]
  10188f:	20 20                	and    BYTE PTR [eax],ah
  101891:	20 20                	and    BYTE PTR [eax],ah
  101893:	20 20                	and    BYTE PTR [eax],ah
  101895:	75 73                	jne    10190a <__func__.863+0xe1>
  101897:	65 72 5f             	gs jb  1018f9 <__func__.863+0xd0>
  10189a:	70 6f                	jo     10190b <__func__.863+0xe2>
  10189c:	6f                   	outs   dx,DWORD PTR ds:[esi]
  10189d:	6c                   	ins    BYTE PTR es:[edi],dx
  10189e:	5f                   	pop    edi
  10189f:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  1018a2:	6d                   	ins    DWORD PTR es:[edi],dx
  1018a3:	61                   	popa   
  1018a4:	70 5f                	jo     101905 <__func__.863+0xdc>
  1018a6:	73 74                	jae    10191c <__func__.863+0xf3>
  1018a8:	61                   	popa   
  1018a9:	72 74                	jb     10191f <__func__.863+0xf6>
  1018ab:	3a 00                	cmp    al,BYTE PTR [eax]
  1018ad:	20 75 73             	and    BYTE PTR [ebp+0x73],dh
  1018b0:	65 72 5f             	gs jb  101912 <__func__.863+0xe9>
  1018b3:	70 6f                	jo     101924 <__func__.863+0xfb>
  1018b5:	6f                   	outs   dx,DWORD PTR ds:[esi]
  1018b6:	6c                   	ins    BYTE PTR es:[edi],dx
  1018b7:	5f                   	pop    edi
  1018b8:	70 68                	jo     101922 <__func__.863+0xf9>
  1018ba:	79 5f                	jns    10191b <__func__.863+0xf2>
  1018bc:	61                   	popa   
  1018bd:	64 64 72 5f          	fs fs jb 101920 <__func__.863+0xf7>
  1018c1:	73 74                	jae    101937 <__func__.863+0x10e>
  1018c3:	61                   	popa   
  1018c4:	72 74                	jb     10193a <__func__.863+0x111>
  1018c6:	3a 00                	cmp    al,BYTE PTR [eax]
  1018c8:	20 20                	and    BYTE PTR [eax],ah
  1018ca:	20 6d 65             	and    BYTE PTR [ebp+0x65],ch
  1018cd:	6d                   	ins    DWORD PTR es:[edi],dx
  1018ce:	5f                   	pop    edi
  1018cf:	70 6f                	jo     101940 <__func__.863+0x117>
  1018d1:	6f                   	outs   dx,DWORD PTR ds:[esi]
  1018d2:	6c                   	ins    BYTE PTR es:[edi],dx
  1018d3:	5f                   	pop    edi
  1018d4:	69 6e 69 74 20 64 6f 	imul   ebp,DWORD PTR [esi+0x69],0x6f642074
  1018db:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1018dc:	65 0a 00             	or     al,BYTE PTR gs:[eax]
  1018df:	6d                   	ins    DWORD PTR es:[edi],dx
  1018e0:	65 6d                	gs ins DWORD PTR es:[edi],dx
  1018e2:	5f                   	pop    edi
  1018e3:	69 6e 69 74 20 73 74 	imul   ebp,DWORD PTR [esi+0x69],0x74732074
  1018ea:	61                   	popa   
  1018eb:	72 74                	jb     101961 <__func__.863+0x138>
  1018ed:	0a 00                	or     al,BYTE PTR [eax]
  1018ef:	6d                   	ins    DWORD PTR es:[edi],dx
  1018f0:	65 6d                	gs ins DWORD PTR es:[edi],dx
  1018f2:	5f                   	pop    edi
  1018f3:	69 6e 69 74 20 64 6f 	imul   ebp,DWORD PTR [esi+0x69],0x6f642074
  1018fa:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1018fb:	65 0a 00             	or     al,BYTE PTR gs:[eax]

Disassembly of section .eh_frame:

00102000 <.eh_frame>:
  102000:	10 00                	adc    BYTE PTR [eax],al
  102002:	00 00                	add    BYTE PTR [eax],al
  102004:	00 00                	add    BYTE PTR [eax],al
  102006:	00 00                	add    BYTE PTR [eax],al
  102008:	01 00                	add    DWORD PTR [eax],eax
  10200a:	01 7c 08 0c          	add    DWORD PTR [eax+ecx*1+0xc],edi
  10200e:	04 04                	add    al,0x4
  102010:	88 01                	mov    BYTE PTR [ecx],al
  102012:	00 00                	add    BYTE PTR [eax],al
  102014:	14 00                	adc    al,0x0
  102016:	00 00                	add    BYTE PTR [eax],al
  102018:	18 00                	sbb    BYTE PTR [eax],al
  10201a:	00 00                	add    BYTE PTR [eax],al
  10201c:	00 00                	add    BYTE PTR [eax],al
  10201e:	10 00                	adc    BYTE PTR [eax],al
  102020:	18 00                	sbb    BYTE PTR [eax],al
  102022:	00 00                	add    BYTE PTR [eax],al
  102024:	41                   	inc    ecx
  102025:	0e                   	push   cs
  102026:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  10202c:	1c 00                	sbb    al,0x0
  10202e:	00 00                	add    BYTE PTR [eax],al
  102030:	30 00                	xor    BYTE PTR [eax],al
  102032:	00 00                	add    BYTE PTR [eax],al
  102034:	b8 01 10 00 1e       	mov    eax,0x1e001001
  102039:	00 00                	add    BYTE PTR [eax],al
  10203b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10203e:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102044:	5a                   	pop    edx
  102045:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  102048:	04 00                	add    al,0x0
  10204a:	00 00                	add    BYTE PTR [eax],al
  10204c:	1c 00                	sbb    al,0x0
  10204e:	00 00                	add    BYTE PTR [eax],al
  102050:	50                   	push   eax
  102051:	00 00                	add    BYTE PTR [eax],al
  102053:	00 d6                	add    dh,dl
  102055:	01 10                	add    DWORD PTR [eax],edx
  102057:	00 dc                	add    ah,bl
  102059:	00 00                	add    BYTE PTR [eax],al
  10205b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10205e:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102064:	02 d8                	add    bl,al
  102066:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  102069:	04 00                	add    al,0x0
  10206b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  10206e:	00 00                	add    BYTE PTR [eax],al
  102070:	70 00                	jo     102072 <__func__.863+0x849>
  102072:	00 00                	add    BYTE PTR [eax],al
  102074:	b2 02                	mov    dl,0x2
  102076:	10 00                	adc    BYTE PTR [eax],al
  102078:	42                   	inc    edx
  102079:	00 00                	add    BYTE PTR [eax],al
  10207b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10207e:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102084:	7e c5                	jle    10204b <__func__.863+0x822>
  102086:	0c 04                	or     al,0x4
  102088:	04 00                	add    al,0x0
  10208a:	00 00                	add    BYTE PTR [eax],al
  10208c:	1c 00                	sbb    al,0x0
  10208e:	00 00                	add    BYTE PTR [eax],al
  102090:	90                   	nop
  102091:	00 00                	add    BYTE PTR [eax],al
  102093:	00 f4                	add    ah,dh
  102095:	02 10                	add    dl,BYTE PTR [eax]
  102097:	00 51 00             	add    BYTE PTR [ecx+0x0],dl
  10209a:	00 00                	add    BYTE PTR [eax],al
  10209c:	41                   	inc    ecx
  10209d:	0e                   	push   cs
  10209e:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1020a4:	02 4d c5             	add    cl,BYTE PTR [ebp-0x3b]
  1020a7:	0c 04                	or     al,0x4
  1020a9:	04 00                	add    al,0x0
  1020ab:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1020ae:	00 00                	add    BYTE PTR [eax],al
  1020b0:	b0 00                	mov    al,0x0
  1020b2:	00 00                	add    BYTE PTR [eax],al
  1020b4:	45                   	inc    ebp
  1020b5:	03 10                	add    edx,DWORD PTR [eax]
  1020b7:	00 41 00             	add    BYTE PTR [ecx+0x0],al
  1020ba:	00 00                	add    BYTE PTR [eax],al
  1020bc:	41                   	inc    ecx
  1020bd:	0e                   	push   cs
  1020be:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1020c4:	7d c5                	jge    10208b <__func__.863+0x862>
  1020c6:	0c 04                	or     al,0x4
  1020c8:	04 00                	add    al,0x0
  1020ca:	00 00                	add    BYTE PTR [eax],al
  1020cc:	1c 00                	sbb    al,0x0
  1020ce:	00 00                	add    BYTE PTR [eax],al
  1020d0:	d0 00                	rol    BYTE PTR [eax],1
  1020d2:	00 00                	add    BYTE PTR [eax],al
  1020d4:	86 03                	xchg   BYTE PTR [ebx],al
  1020d6:	10 00                	adc    BYTE PTR [eax],al
  1020d8:	f5                   	cmc    
  1020d9:	00 00                	add    BYTE PTR [eax],al
  1020db:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  1020de:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1020e4:	02 f1                	add    dh,cl
  1020e6:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  1020e9:	04 00                	add    al,0x0
  1020eb:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1020ee:	00 00                	add    BYTE PTR [eax],al
  1020f0:	f0 00 00             	lock add BYTE PTR [eax],al
  1020f3:	00 7b 04             	add    BYTE PTR [ebx+0x4],bh
  1020f6:	10 00                	adc    BYTE PTR [eax],al
  1020f8:	29 00                	sub    DWORD PTR [eax],eax
  1020fa:	00 00                	add    BYTE PTR [eax],al
  1020fc:	41                   	inc    ecx
  1020fd:	0e                   	push   cs
  1020fe:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102104:	65 c5 0c 04          	lds    ecx,FWORD PTR gs:[esp+eax*1]
  102108:	04 00                	add    al,0x0
  10210a:	00 00                	add    BYTE PTR [eax],al
  10210c:	1c 00                	sbb    al,0x0
  10210e:	00 00                	add    BYTE PTR [eax],al
  102110:	10 01                	adc    BYTE PTR [ecx],al
  102112:	00 00                	add    BYTE PTR [eax],al
  102114:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  102115:	04 10                	add    al,0x10
  102117:	00 29                	add    BYTE PTR [ecx],ch
  102119:	00 00                	add    BYTE PTR [eax],al
  10211b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10211e:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102124:	65 c5 0c 04          	lds    ecx,FWORD PTR gs:[esp+eax*1]
  102128:	04 00                	add    al,0x0
  10212a:	00 00                	add    BYTE PTR [eax],al
  10212c:	1c 00                	sbb    al,0x0
  10212e:	00 00                	add    BYTE PTR [eax],al
  102130:	30 01                	xor    BYTE PTR [ecx],al
  102132:	00 00                	add    BYTE PTR [eax],al
  102134:	cd 04                	int    0x4
  102136:	10 00                	adc    BYTE PTR [eax],al
  102138:	1e                   	push   ds
  102139:	00 00                	add    BYTE PTR [eax],al
  10213b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10213e:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102144:	5a                   	pop    edx
  102145:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  102148:	04 00                	add    al,0x0
  10214a:	00 00                	add    BYTE PTR [eax],al
  10214c:	20 00                	and    BYTE PTR [eax],al
  10214e:	00 00                	add    BYTE PTR [eax],al
  102150:	50                   	push   eax
  102151:	01 00                	add    DWORD PTR [eax],eax
  102153:	00 eb                	add    bl,ch
  102155:	04 10                	add    al,0x10
  102157:	00 29                	add    BYTE PTR [ecx],ch
  102159:	00 00                	add    BYTE PTR [eax],al
  10215b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10215e:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102164:	44                   	inc    esp
  102165:	83 03 60             	add    DWORD PTR [ebx],0x60
  102168:	c3                   	ret    
  102169:	41                   	inc    ecx
  10216a:	0c 04                	or     al,0x4
  10216c:	04 c5                	add    al,0xc5
  10216e:	00 00                	add    BYTE PTR [eax],al
  102170:	24 00                	and    al,0x0
  102172:	00 00                	add    BYTE PTR [eax],al
  102174:	74 01                	je     102177 <__func__.863+0x94e>
  102176:	00 00                	add    BYTE PTR [eax],al
  102178:	14 05                	adc    al,0x5
  10217a:	10 00                	adc    BYTE PTR [eax],al
  10217c:	5e                   	pop    esi
  10217d:	00 00                	add    BYTE PTR [eax],al
  10217f:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  102182:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102188:	45                   	inc    ebp
  102189:	83 04 86 03          	add    DWORD PTR [esi+eax*4],0x3
  10218d:	02 53 c3             	add    dl,BYTE PTR [ebx-0x3d]
  102190:	41                   	inc    ecx
  102191:	c6 41 0c 04          	mov    BYTE PTR [ecx+0xc],0x4
  102195:	04 c5                	add    al,0xc5
  102197:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  10219a:	00 00                	add    BYTE PTR [eax],al
  10219c:	9c                   	pushf  
  10219d:	01 00                	add    DWORD PTR [eax],eax
  10219f:	00 cc                	add    ah,cl
  1021a1:	09 10                	or     DWORD PTR [eax],edx
  1021a3:	00 23                	add    BYTE PTR [ebx],ah
  1021a5:	00 00                	add    BYTE PTR [eax],al
  1021a7:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  1021aa:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1021b0:	5f                   	pop    edi
  1021b1:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  1021b4:	04 00                	add    al,0x0
  1021b6:	00 00                	add    BYTE PTR [eax],al
  1021b8:	1c 00                	sbb    al,0x0
  1021ba:	00 00                	add    BYTE PTR [eax],al
  1021bc:	bc 01 00 00 f0       	mov    esp,0xf0000001
  1021c1:	09 10                	or     DWORD PTR [eax],edx
  1021c3:	00 1e                	add    BYTE PTR [esi],bl
  1021c5:	00 00                	add    BYTE PTR [eax],al
  1021c7:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  1021ca:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1021d0:	5a                   	pop    edx
  1021d1:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  1021d4:	04 00                	add    al,0x0
  1021d6:	00 00                	add    BYTE PTR [eax],al
  1021d8:	24 00                	and    al,0x0
  1021da:	00 00                	add    BYTE PTR [eax],al
  1021dc:	dc 01                	fadd   QWORD PTR [ecx]
  1021de:	00 00                	add    BYTE PTR [eax],al
  1021e0:	0e                   	push   cs
  1021e1:	0a 10                	or     dl,BYTE PTR [eax]
  1021e3:	00 98 00 00 00 41    	add    BYTE PTR [eax+0x41000000],bl
  1021e9:	0e                   	push   cs
  1021ea:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1021f0:	45                   	inc    ebp
  1021f1:	83 04 86 03          	add    DWORD PTR [esi+eax*4],0x3
  1021f5:	02 8d c3 41 c6 41    	add    cl,BYTE PTR [ebp+0x41c641c3]
  1021fb:	0c 04                	or     al,0x4
  1021fd:	04 c5                	add    al,0xc5
  1021ff:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  102202:	00 00                	add    BYTE PTR [eax],al
  102204:	04 02                	add    al,0x2
  102206:	00 00                	add    BYTE PTR [eax],al
  102208:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  102209:	0a 10                	or     dl,BYTE PTR [eax]
  10220b:	00 4c 00 00          	add    BYTE PTR [eax+eax*1+0x0],cl
  10220f:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  102212:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102218:	02 48 c5             	add    cl,BYTE PTR [eax-0x3b]
  10221b:	0c 04                	or     al,0x4
  10221d:	04 00                	add    al,0x0
  10221f:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
  102222:	00 00                	add    BYTE PTR [eax],al
  102224:	24 02                	and    al,0x2
  102226:	00 00                	add    BYTE PTR [eax],al
  102228:	f4                   	hlt    
  102229:	0a 10                	or     dl,BYTE PTR [eax]
  10222b:	00 a5 00 00 00 41    	add    BYTE PTR [ebp+0x41000000],ah
  102231:	0e                   	push   cs
  102232:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102238:	1c 00                	sbb    al,0x0
  10223a:	00 00                	add    BYTE PTR [eax],al
  10223c:	3c 02                	cmp    al,0x2
  10223e:	00 00                	add    BYTE PTR [eax],al
  102240:	9c                   	pushf  
  102241:	0b 10                	or     edx,DWORD PTR [eax]
  102243:	00 5c 00 00          	add    BYTE PTR [eax+eax*1+0x0],bl
  102247:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10224a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102250:	02 58 c5             	add    bl,BYTE PTR [eax-0x3b]
  102253:	0c 04                	or     al,0x4
  102255:	04 00                	add    al,0x0
  102257:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  10225a:	00 00                	add    BYTE PTR [eax],al
  10225c:	5c                   	pop    esp
  10225d:	02 00                	add    al,BYTE PTR [eax]
  10225f:	00 f8                	add    al,bh
  102261:	0b 10                	or     edx,DWORD PTR [eax]
  102263:	00 68 00             	add    BYTE PTR [eax+0x0],ch
  102266:	00 00                	add    BYTE PTR [eax],al
  102268:	41                   	inc    ecx
  102269:	0e                   	push   cs
  10226a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102270:	02 64 c5 0c          	add    ah,BYTE PTR [ebp+eax*8+0xc]
  102274:	04 04                	add    al,0x4
  102276:	00 00                	add    BYTE PTR [eax],al
  102278:	1c 00                	sbb    al,0x0
  10227a:	00 00                	add    BYTE PTR [eax],al
  10227c:	7c 02                	jl     102280 <__func__.863+0xa57>
  10227e:	00 00                	add    BYTE PTR [eax],al
  102280:	60                   	pusha  
  102281:	0c 10                	or     al,0x10
  102283:	00 93 00 00 00 41    	add    BYTE PTR [ebx+0x41000000],dl
  102289:	0e                   	push   cs
  10228a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102290:	02 8f c5 0c 04 04    	add    cl,BYTE PTR [edi+0x4040cc5]
  102296:	00 00                	add    BYTE PTR [eax],al
  102298:	1c 00                	sbb    al,0x0
  10229a:	00 00                	add    BYTE PTR [eax],al
  10229c:	9c                   	pushf  
  10229d:	02 00                	add    al,BYTE PTR [eax]
  10229f:	00 f3                	add    bl,dh
  1022a1:	0c 10                	or     al,0x10
  1022a3:	00 64 00 00          	add    BYTE PTR [eax+eax*1+0x0],ah
  1022a7:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  1022aa:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1022b0:	02 60 c5             	add    ah,BYTE PTR [eax-0x3b]
  1022b3:	0c 04                	or     al,0x4
  1022b5:	04 00                	add    al,0x0
  1022b7:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1022ba:	00 00                	add    BYTE PTR [eax],al
  1022bc:	bc 02 00 00 57       	mov    esp,0x57000002
  1022c1:	0d 10 00 5b 00       	or     eax,0x5b0010
  1022c6:	00 00                	add    BYTE PTR [eax],al
  1022c8:	41                   	inc    ecx
  1022c9:	0e                   	push   cs
  1022ca:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1022d0:	02 57 c5             	add    dl,BYTE PTR [edi-0x3b]
  1022d3:	0c 04                	or     al,0x4
  1022d5:	04 00                	add    al,0x0
  1022d7:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  1022da:	00 00                	add    BYTE PTR [eax],al
  1022dc:	dc 02                	fadd   QWORD PTR [edx]
  1022de:	00 00                	add    BYTE PTR [eax],al
  1022e0:	b2 0d                	mov    dl,0xd
  1022e2:	10 00                	adc    BYTE PTR [eax],al
  1022e4:	86 00                	xchg   BYTE PTR [eax],al
  1022e6:	00 00                	add    BYTE PTR [eax],al
  1022e8:	41                   	inc    ecx
  1022e9:	0e                   	push   cs
  1022ea:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1022f0:	02 82 c5 0c 04 04    	add    al,BYTE PTR [edx+0x4040cc5]
  1022f6:	00 00                	add    BYTE PTR [eax],al
  1022f8:	1c 00                	sbb    al,0x0
  1022fa:	00 00                	add    BYTE PTR [eax],al
  1022fc:	fc                   	cld    
  1022fd:	02 00                	add    al,BYTE PTR [eax]
  1022ff:	00 38                	add    BYTE PTR [eax],bh
  102301:	0e                   	push   cs
  102302:	10 00                	adc    BYTE PTR [eax],al
  102304:	66 00 00             	data16 add BYTE PTR [eax],al
  102307:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10230a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102310:	02 62 c5             	add    ah,BYTE PTR [edx-0x3b]
  102313:	0c 04                	or     al,0x4
  102315:	04 00                	add    al,0x0
  102317:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  10231a:	00 00                	add    BYTE PTR [eax],al
  10231c:	1c 03                	sbb    al,0x3
  10231e:	00 00                	add    BYTE PTR [eax],al
  102320:	9e                   	sahf   
  102321:	0e                   	push   cs
  102322:	10 00                	adc    BYTE PTR [eax],al
  102324:	69 00 00 00 41 0e    	imul   eax,DWORD PTR [eax],0xe410000
  10232a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102330:	02 65 c5             	add    ah,BYTE PTR [ebp-0x3b]
  102333:	0c 04                	or     al,0x4
  102335:	04 00                	add    al,0x0
  102337:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  10233a:	00 00                	add    BYTE PTR [eax],al
  10233c:	3c 03                	cmp    al,0x3
  10233e:	00 00                	add    BYTE PTR [eax],al
  102340:	07                   	pop    es
  102341:	0f 10 00             	movups xmm0,XMMWORD PTR [eax]
  102344:	7c 00                	jl     102346 <__func__.863+0xb1d>
  102346:	00 00                	add    BYTE PTR [eax],al
  102348:	41                   	inc    ecx
  102349:	0e                   	push   cs
  10234a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102350:	02 78 c5             	add    bh,BYTE PTR [eax-0x3b]
  102353:	0c 04                	or     al,0x4
  102355:	04 00                	add    al,0x0
  102357:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  10235a:	00 00                	add    BYTE PTR [eax],al
  10235c:	5c                   	pop    esp
  10235d:	03 00                	add    eax,DWORD PTR [eax]
  10235f:	00 83 0f 10 00 6d    	add    BYTE PTR [ebx+0x6d00100f],al
  102365:	00 00                	add    BYTE PTR [eax],al
  102367:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10236a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102370:	02 69 c5             	add    ch,BYTE PTR [ecx-0x3b]
  102373:	0c 04                	or     al,0x4
  102375:	04 00                	add    al,0x0
  102377:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  10237a:	00 00                	add    BYTE PTR [eax],al
  10237c:	7c 03                	jl     102381 <__func__.863+0xb58>
  10237e:	00 00                	add    BYTE PTR [eax],al
  102380:	f0 0f 10 00          	lock movups xmm0,XMMWORD PTR [eax]
  102384:	27                   	daa    
  102385:	00 00                	add    BYTE PTR [eax],al
  102387:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  10238a:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102390:	63 c5                	arpl   bp,ax
  102392:	0c 04                	or     al,0x4
  102394:	04 00                	add    al,0x0
  102396:	00 00                	add    BYTE PTR [eax],al
  102398:	24 00                	and    al,0x0
  10239a:	00 00                	add    BYTE PTR [eax],al
  10239c:	9c                   	pushf  
  10239d:	03 00                	add    eax,DWORD PTR [eax]
  10239f:	00 17                	add    BYTE PTR [edi],dl
  1023a1:	10 10                	adc    BYTE PTR [eax],dl
  1023a3:	00 42 00             	add    BYTE PTR [edx+0x0],al
  1023a6:	00 00                	add    BYTE PTR [eax],al
  1023a8:	41                   	inc    ecx
  1023a9:	0e                   	push   cs
  1023aa:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1023b0:	45                   	inc    ebp
  1023b1:	83 04 86 03          	add    DWORD PTR [esi+eax*4],0x3
  1023b5:	77 c3                	ja     10237a <__func__.863+0xb51>
  1023b7:	41                   	inc    ecx
  1023b8:	c6 41 0c 04          	mov    BYTE PTR [ecx+0xc],0x4
  1023bc:	04 c5                	add    al,0xc5
  1023be:	00 00                	add    BYTE PTR [eax],al
  1023c0:	20 00                	and    BYTE PTR [eax],al
  1023c2:	00 00                	add    BYTE PTR [eax],al
  1023c4:	c4 03                	les    eax,FWORD PTR [ebx]
  1023c6:	00 00                	add    BYTE PTR [eax],al
  1023c8:	59                   	pop    ecx
  1023c9:	10 10                	adc    BYTE PTR [eax],dl
  1023cb:	00 4d 01             	add    BYTE PTR [ebp+0x1],cl
  1023ce:	00 00                	add    BYTE PTR [eax],al
  1023d0:	41                   	inc    ecx
  1023d1:	0e                   	push   cs
  1023d2:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1023d8:	44                   	inc    esp
  1023d9:	83 03 03             	add    DWORD PTR [ebx],0x3
  1023dc:	44                   	inc    esp
  1023dd:	01 c3                	add    ebx,eax
  1023df:	41                   	inc    ecx
  1023e0:	0c 04                	or     al,0x4
  1023e2:	04 c5                	add    al,0xc5
  1023e4:	28 00                	sub    BYTE PTR [eax],al
  1023e6:	00 00                	add    BYTE PTR [eax],al
  1023e8:	e8 03 00 00 a6       	call   a61023f0 <_end+0xa5fffca0>
  1023ed:	11 10                	adc    DWORD PTR [eax],edx
  1023ef:	00 b9 00 00 00 41    	add    BYTE PTR [ecx+0x41000000],bh
  1023f5:	0e                   	push   cs
  1023f6:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  1023fc:	46                   	inc    esi
  1023fd:	83 05 86 04 87 03 02 	add    DWORD PTR ds:0x3870486,0x2
  102404:	ac                   	lods   al,BYTE PTR ds:[esi]
  102405:	c3                   	ret    
  102406:	41                   	inc    ecx
  102407:	c6 41 c7 41          	mov    BYTE PTR [ecx-0x39],0x41
  10240b:	0c 04                	or     al,0x4
  10240d:	04 c5                	add    al,0xc5
  10240f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  102412:	00 00                	add    BYTE PTR [eax],al
  102414:	14 04                	adc    al,0x4
  102416:	00 00                	add    BYTE PTR [eax],al
  102418:	60                   	pusha  
  102419:	12 10                	adc    dl,BYTE PTR [eax]
  10241b:	00 ab 01 00 00 41    	add    BYTE PTR [ebx+0x41000001],ch
  102421:	0e                   	push   cs
  102422:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102428:	03 a7 01 c5 0c 04    	add    esp,DWORD PTR [edi+0x40cc501]
  10242e:	04 00                	add    al,0x0
  102430:	1c 00                	sbb    al,0x0
  102432:	00 00                	add    BYTE PTR [eax],al
  102434:	34 04                	xor    al,0x4
  102436:	00 00                	add    BYTE PTR [eax],al
  102438:	0b 14 10             	or     edx,DWORD PTR [eax+edx*1]
  10243b:	00 35 00 00 00 41    	add    BYTE PTR ds:0x41000000,dh
  102441:	0e                   	push   cs
  102442:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
  102448:	71 c5                	jno    10240f <__func__.863+0xbe6>
  10244a:	0c 04                	or     al,0x4
  10244c:	04 00                	add    al,0x0
	...

Disassembly of section .data:

00102450 <put_int_buffer>:
	...

00102458 <intr_entry_table>:
  102458:	94                   	xchg   esp,eax
  102459:	05 10 00 b6 05       	add    eax,0x5b60010
  10245e:	10 00                	adc    BYTE PTR [eax],al
  102460:	d8 05 10 00 fa 05    	fadd   DWORD PTR ds:0x5fa0010
  102466:	10 00                	adc    BYTE PTR [eax],al
  102468:	1c 06                	sbb    al,0x6
  10246a:	10 00                	adc    BYTE PTR [eax],al
  10246c:	3e 06                	ds push es
  10246e:	10 00                	adc    BYTE PTR [eax],al
  102470:	60                   	pusha  
  102471:	06                   	push   es
  102472:	10 00                	adc    BYTE PTR [eax],al
  102474:	82                   	(bad)  
  102475:	06                   	push   es
  102476:	10 00                	adc    BYTE PTR [eax],al
  102478:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  102479:	06                   	push   es
  10247a:	10 00                	adc    BYTE PTR [eax],al
  10247c:	c2 06 10             	ret    0x1006
  10247f:	00 e4                	add    ah,ah
  102481:	06                   	push   es
  102482:	10 00                	adc    BYTE PTR [eax],al
  102484:	02 07                	add    al,BYTE PTR [edi]
  102486:	10 00                	adc    BYTE PTR [eax],al
  102488:	20 07                	and    BYTE PTR [edi],al
  10248a:	10 00                	adc    BYTE PTR [eax],al
  10248c:	42                   	inc    edx
  10248d:	07                   	pop    es
  10248e:	10 00                	adc    BYTE PTR [eax],al
  102490:	60                   	pusha  
  102491:	07                   	pop    es
  102492:	10 00                	adc    BYTE PTR [eax],al
  102494:	7e 07                	jle    10249d <intr_entry_table+0x45>
  102496:	10 00                	adc    BYTE PTR [eax],al
  102498:	a0 07 10 00 c2       	mov    al,ds:0xc2001007
  10249d:	07                   	pop    es
  10249e:	10 00                	adc    BYTE PTR [eax],al
  1024a0:	e0 07                	loopne 1024a9 <intr_entry_table+0x51>
  1024a2:	10 00                	adc    BYTE PTR [eax],al
  1024a4:	02 08                	add    cl,BYTE PTR [eax]
  1024a6:	10 00                	adc    BYTE PTR [eax],al
  1024a8:	24 08                	and    al,0x8
  1024aa:	10 00                	adc    BYTE PTR [eax],al
  1024ac:	46                   	inc    esi
  1024ad:	08 10                	or     BYTE PTR [eax],dl
  1024af:	00 68 08             	add    BYTE PTR [eax+0x8],ch
  1024b2:	10 00                	adc    BYTE PTR [eax],al
  1024b4:	8a 08                	mov    cl,BYTE PTR [eax]
  1024b6:	10 00                	adc    BYTE PTR [eax],al
  1024b8:	ac                   	lods   al,BYTE PTR ds:[esi]
  1024b9:	08 10                	or     BYTE PTR [eax],dl
  1024bb:	00 ca                	add    dl,cl
  1024bd:	08 10                	or     BYTE PTR [eax],dl
  1024bf:	00 ec                	add    ah,ch
  1024c1:	08 10                	or     BYTE PTR [eax],dl
  1024c3:	00 0a                	add    BYTE PTR [edx],cl
  1024c5:	09 10                	or     DWORD PTR [eax],edx
  1024c7:	00 28                	add    BYTE PTR [eax],ch
  1024c9:	09 10                	or     DWORD PTR [eax],edx
  1024cb:	00 4a 09             	add    BYTE PTR [edx+0x9],cl
  1024ce:	10 00                	adc    BYTE PTR [eax],al
  1024d0:	68 09 10 00 86       	push   0x86001009
  1024d5:	09 10                	or     DWORD PTR [eax],edx
  1024d7:	00                   	.byte 0x0
  1024d8:	a8 09                	test   al,0x9
  1024da:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .bss:

001024e0 <idt>:
	...

00102600 <intr_name>:
	...

001026a0 <idt_table>:
	...

00102724 <user_pool>:
	...

00102734 <kernel_vaddr>:
	...

00102740 <kernel_pool>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   8:	55                   	push   ebp
   9:	29 20                	sub    DWORD PTR [eax],esp
   b:	34 2e                	xor    al,0x2e
   d:	36 2e 31 00          	ss xor DWORD PTR cs:[eax],eax
